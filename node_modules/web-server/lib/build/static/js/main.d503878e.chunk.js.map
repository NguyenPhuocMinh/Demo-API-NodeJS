{"version":3,"sources":["dataProvider/index.js","authProvider/authProvider.js","i18n/vn.js","i18n/en.js","i18n/i18nProvider.js","authProvider/checkPermissions.js","layout/DashBoard.js","layout/NotFound.js","layout/Menu.js","layout/SubMenu.js","App.js","serviceWorker.js","index.js"],"names":["FakeData","type","then","provider","default","authProvider","login","username","password","request","Request","method","body","JSON","stringify","email","headers","Headers","localStorage","getItem","fetch","response","status","json","result","Error","error","token","webConfigs","decodedToken","decodeJwt","setItem","get","catch","err","Promise","reject","logout","removeItem","resolve","checkError","checkAuth","redirecTo","getPermissions","roles","vnMessages","pos","search","configuration","profile","changePassword","passwordSettingTitle","passwordSettingContent","currentPassword","newPassword","verifiedNewPassword","forgetPass","forgetPassSetting","sendMailInfo","sendPhoneInfo","cancel","confirm","language","theme","name","light","dark","dashboard","welcome","title","content","subtitle","aor_button","demo_button","menu","sales","catalog","customers","backgrounds","notFound","nationals","vn","el","cn","am","jp","kr","resources","firstName","lastName","gender","avatar","role","statusProducts","stock","outOfStock","accounts","list","create","edit","fields","userName","price","rank","hero","gold","skin","pearl_points","thumbnail","choosesThumbnail","images","choosesImages","activated","tabs","information","photoIntroduction","filter","categoryId","imageId","ranks","titles","label","order","idNumber","dob","address","city","total_spent","description","product","quantity","fieldGroups","identity","backGroundBig","choosesBackGroundBig","backGroundSmall","choosesBackGroundSmall","englishMessages","monthly_revenue","new_orders","pending_reviews","new_customers","pending_orders","items","genres","commands","groups","last_seen_gte","orders","reviews","stats","page","delete","basket","delivery","reference","sum","tax_rate","total","unit_price","customer_id","date_gte","date_lte","total_gte","returned","invoices","date","command_id","products","category_id","height_gte","height_lte","height","image","stock_lte","width_gte","width_lte","width","details","categories","detail","product_id","comment","rating","action","accept","notification","approved_success","approved_error","rejected_success","rejected_error","segments","data","compulsive","collector","ordered_once","regular","returns","reviewer","messages","en","i18nProvider","polyglotI18nProvider","locale","resolveBrowserLocale","adminRoles","translate","props","permissions","checkArray","map","includes","checkPermission","Card","CardHeader","CardContent","Title","Menu","makeStyles","icon","minWidth","spacing","sidebarIsOpen","paddingLeft","transition","sidebarIsClosed","onMenuClick","dense","useState","menuSales","menuCustomers","open","useTranslate","useSelector","state","admin","ui","sidebarOpen","DashboardMenuItem","onClick","App","dataProvider","setDataProvider","useEffect","a","dataProviderFactory","process","REACT_APP_DATA_PROVIDER","dataProviderInstance","fetchDataProvider","console","log","Admin","Dashboard","catchAll","NotFound","Resource","key","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d503878e.chunk.js","sourcesContent":["const FakeData = [];\nexport default type => {\n  switch (type) {\n    case \"fakeapi\":\n      return FakeData;\n    case \"restapi\":\n      return import('./rest').then(provider => provider.default);\n    default:\n      return FakeData;\n  }\n};\n","import decodeJwt from 'jwt-decode';\nimport { get } from 'lodash';\n\n// const BASE_URL = process.env.REACT_APP_REST_API_AUTHENTICATE_URL;\n\nconst authProvider = {\n  login: ({ username, password }) => {\n    const request = new Request(\"/user/logins\", {\n      method: 'POST',\n      body: JSON.stringify({ email: username, password }),\n      headers: _prepareHeaders(),\n    });\n    return fetch(request)\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n          return response.json()\n            .then(result => {\n              throw new Error(result.error)\n            })\n        }\n        return response.json();\n      })\n      .then(({ token, webConfigs }) => {\n        const decodedToken = decodeJwt(token);\n        localStorage.setItem('token', token);\n        localStorage.setItem('permissions', get(decodedToken, 'userLogin.permissions'));\n        // localStorage.setItem(\"roles\", JSON.stringify(decodedToken.userLogin.adminApp.roles));\n        // localStorage.setItem('userId', decodedToken.userLogin._id);\n        // localStorage.setItem('resetToken', decodedToken.userLogin.adminApp.resetPassword);\n        localStorage.setItem('webConfigs', JSON.stringify(webConfigs));\n      })\n      .catch(err => {\n        return Promise.reject(err)\n      })\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('permissions');\n    localStorage.removeItem('resetToken');\n    localStorage.removeItem('webConfigs');\n    return Promise.resolve();\n  },\n  checkError: (error) => {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  checkAuth: () =>\n    localStorage.getItem('token')\n      ? Promise.resolve()\n      : Promise.reject({ redirecTo: \"/\" }),\n  getPermissions: () => {\n    const roles = localStorage.getItem('permissions');\n    return roles ? Promise.resolve(roles) : Promise.reject();\n  }\n};\n\nfunction _prepareHeaders() {\n  return new Headers({\n    \"Content-Type\": \"application/json\",\n    \"X-Access-Token\": localStorage.getItem(\"token\")\n  });\n}\n\nexport default authProvider;","import vnMessages from \"ra-language-vietnamese\";\n\nexport default {\n  ...vnMessages,\n  pos: {\n    search: \"Tìm kiếm\",\n    configuration: \"Cấu hình\",\n    profile: 'Hồ sơ',\n    password: \"Mật khẩu\",\n    changePassword: \"Đổi mật khẩu\",\n    passwordSettingTitle: \"Bạn có chắc chắn muốn thay đổi mật khẩu ? \",\n    passwordSettingContent: \"Nếu chắc chắn, xin hãy nhập kỹ mật khẩu cần thay đổi !\",\n    currentPassword: \"Mật khẩu hiện tại\",\n    newPassword: \"Mật khẩu mới\",\n    verifiedNewPassword: \"Xác nhận mật khẩu\",\n    forgetPass: \"Quên mật khẩu\",\n    forgetPassSetting: \"Bạn bị quên hoặc mất mật khẩu ? \",\n    sendMailInfo: \"Nhận mã từ mail\",\n    sendPhoneInfo: \"Nhận mã từ số điện thoại\",\n    cancel: \"Hủy\",\n    confirm: \"Xác nhận\",\n    language: \"Ngôn ngữ\",\n    theme: {\n      name: \"Màu nền\",\n      light: \"Sáng\",\n      dark: \"Tối\"\n    },\n    dashboard: {\n      welcome: {\n        title: \"Chào mừng đến với trang của tôi\",\n        content: \"Chào mừng đến với trang quản lý...\",\n        subtitle: \"Phụ đề\",\n        aor_button: \"Site web de react-admin\",\n        demo_button: \"Code source de cette démo\"\n      }\n    },\n    menu: {\n      sales: \"Bán hàng\",\n      catalog: \"Catalogue\",\n      customers: \"Clients\",\n      backgrounds: 'Ảnh nền'\n    },\n    notFound: {\n      title: \"Không tìm thấy\",\n      content: \"Không tìm thấy trang bạn cần tìm\"\n    }\n  },\n  nationals: {\n    vn: 'Việt Nam',\n    el: 'Anh',\n    cn: 'Trung Quốc',\n    am: 'Mỹ',\n    jp: 'Nhật Bản',\n    kr: 'Hàn Quốc'\n  },\n  resources: {\n    profile: {\n      name: 'Hồ sơ',\n      firstName: 'Tên',\n      lastName: 'Họ',\n      email: 'Email',\n      gender: 'Giới tính',\n      avatar: 'Avatar',\n      role: 'Quyền',\n    },\n    statusProducts: {\n      stock: 'Còn hàng',\n      outOfStock: 'Hết hàng'\n    },\n    accounts: {\n      name: 'Account',\n      title: {\n        list: 'Danh sách Account',\n        create: 'Tạo Account',\n        edit: 'Chỉnh sửa Account',\n      },\n      fields: {\n        userName: 'Tên đăng nhập',\n        password: 'Mật khẩu',\n        price: 'Giá Acc',\n        rank: 'Rank',\n        hero: 'Tướng',\n        gold: 'Vàng',\n        skin: 'Trang phục',\n        pearl_points: 'Điểm ngọc',\n        thumbnail: 'Ảnh bìa của acc',\n        choosesThumbnail: 'Chọn ảnh bìa của acc',\n        images: 'Ảnh của acc',\n        choosesImages: 'Chọn ảnh chi tiết của acc',\n        activated: 'Kích hoạt',\n        status: 'Trạng thái'\n      },\n      tabs: {\n        information: 'Thông tin Account',\n        photoIntroduction: 'Ảnh giới thiệu',\n      },\n      filter: {\n        categoryId: 'Thể loại',\n        imageId: 'Hình ảnh'\n      }\n    },\n    ranks: {\n      name: 'Rank',\n      titles: {\n        list: 'Danh sách Rank',\n        create: 'Tạo Rank',\n        edit: 'Chỉnh sửa Rank',\n      },\n      fields: {\n        name: 'Rank'\n      }\n    },\n    customers: {\n      name: 'Khách hàng',\n      title: {\n        create: 'Tạo khách hàng',\n        edit: 'Chỉnh sửa khách hàng',\n        list: 'Danh sách khách hàng'\n      },\n      label: {\n        information: 'Thông tin',\n        order: 'Đơn hàng'\n      },\n      fields: {\n        firstName: 'Họ',\n        lastName: 'Tên',\n        email: 'Email',\n        idNumber: 'Chứng minh nhân dân',\n        dob: 'Ngày sinh',\n        address: 'Địa chỉ',\n        city: 'Thành phố',\n        order: 'Đặt hàng',\n        total_spent: 'Tổng tiền',\n        description: 'Nội dung',\n        product: 'Sản phẩm',\n        quantity: 'Số lượng',\n      },\n      fieldGroups: {\n        identity: 'Danh tính',\n        address: 'Địa chỉ sinh sống',\n        order: 'Đơn đặt hàng'\n      }\n    },\n    backgrounds: {\n      name: 'Ảnh nền',\n      title: {\n        create: 'Tạo Ảnh nền',\n        edit: 'Chỉnh sửa Ảnh nền',\n        list: 'Danh sách Ảnh nền'\n      },\n      fields: {\n        backGroundBig: 'Ảnh nền lớn',\n        choosesBackGroundBig: 'Chọn ảnh nền lớn',\n        backGroundSmall: 'Ảnh nền nhỏ',\n        choosesBackGroundSmall: 'Chọn ảnh nền nhỏ'\n      }\n    }\n  }\n};\n","import englishMessages from \"ra-language-english\";\n\nexport default {\n  ...englishMessages,\n  pos: {\n    search: \"Search\",\n    configuration: \"Configuration\",\n    changePassword: \"Change Password\",\n    language: \"Language\",\n    theme: {\n      name: \"Theme\",\n      light: \"Light\",\n      dark: \"Dark\"\n    },\n    dashboard: {\n      monthly_revenue: \"Monthly Revenue\",\n      new_orders: \"New Orders\",\n      pending_reviews: \"Pending Reviews\",\n      new_customers: \"New Customers\",\n      pending_orders: \"Pending Orders\",\n      order: {\n        items:\n          \"by %{customer_name}, one item |||| by %{customer_name}, %{nb_items} items\"\n      },\n      welcome: {\n        title: \"Welcome to my react-admin page\",\n        content: \"Welcome to my manage react-admin...\",\n        subtitle:\n          \"This is the admin of an imaginary poster shop. Feel free to explore and modify the data - it's local to your computer, and will reset each time you reload.\",\n        aor_button: \"react-admin site\",\n        demo_button: \"Source for this demo\"\n      }\n    },\n    menu: {\n      sales: \"Sales\",\n      catalog: \"Catalog\",\n      customers: \"Customers\"\n    }\n  },\n  resources: {\n    profile: {\n      name: 'Profile',\n      firstName: 'Name',\n      lastName: 'Họ',\n      email: 'Email',\n      gender: 'Gender',\n      avatar: 'Avatar',\n      role: 'Role',\n    },\n    product: {\n      name: \"Product\"\n    },\n    genres: {\n      name: \"genres\"\n    },\n    customers: {\n      name: \"Customer |||| Customers\",\n      fields: {\n        commands: \"Orders\",\n        groups: \"Segments\",\n        last_seen_gte: \"Visited Since\",\n        name: \"Name\",\n        total_spent: \"Total spent\"\n      },\n      tabs: {\n        identity: \"Identity\",\n        address: \"Address\",\n        orders: \"Orders\",\n        reviews: \"Reviews\",\n        stats: \"Stats\"\n      },\n      page: {\n        delete: \"Delete Customer\"\n      }\n    },\n    commands: {\n      name: \"Order |||| Orders\",\n      title: \"Order %{reference}\",\n      fields: {\n        basket: {\n          delivery: \"Delivery\",\n          reference: \"Reference\",\n          quantity: \"Quantity\",\n          sum: \"Sum\",\n          tax_rate: \"Tax Rate\",\n          total: \"Total\",\n          unit_price: \"Unit Price\"\n        },\n        customer_id: \"Customer\",\n        date_gte: \"Passed Since\",\n        date_lte: \"Passed Before\",\n        total_gte: \"Min amount\",\n        status: \"Status\",\n        returned: \"Returned\"\n      }\n    },\n    invoices: {\n      name: \"Invoice |||| Invoices\",\n      fields: {\n        date: \"Invoice date\",\n        customer_id: \"Customer\",\n        command_id: \"Order\",\n        date_gte: \"Passed Since\",\n        date_lte: \"Passed Before\",\n        total_gte: \"Min amount\",\n        address: \"Address\"\n      }\n    },\n    products: {\n      name: \"Poster |||| Posters\",\n      fields: {\n        category_id: \"Category\",\n        height_gte: \"Min height\",\n        height_lte: \"Max height\",\n        height: \"Height\",\n        image: \"Image\",\n        price: \"Price\",\n        reference: \"Reference\",\n        stock_lte: \"Low Stock\",\n        stock: \"Stock\",\n        thumbnail: \"Thumbnail\",\n        width_gte: \"Min width\",\n        width_lte: \"Max width\",\n        width: \"Width\"\n      },\n      tabs: {\n        image: \"Image\",\n        details: \"Details\",\n        description: \"Description\",\n        reviews: \"Reviews\"\n      }\n    },\n    categories: {\n      name: \"Category |||| Categories\",\n      fields: {\n        products: \"Products\"\n      }\n    },\n    reviews: {\n      name: \"Review |||| Reviews\",\n      detail: \"Review detail\",\n      fields: {\n        customer_id: \"Customer\",\n        command_id: \"Order\",\n        product_id: \"Product\",\n        date_gte: \"Posted since\",\n        date_lte: \"Posted before\",\n        date: \"Date\",\n        comment: \"Comment\",\n        rating: \"Rating\"\n      },\n      action: {\n        accept: \"Accept\",\n        reject: \"Reject\"\n      },\n      notification: {\n        approved_success: \"Review approved\",\n        approved_error: \"Error: Review not approved\",\n        rejected_success: \"Review rejected\",\n        rejected_error: \"Error: Review not rejected\"\n      }\n    },\n    segments: {\n      name: \"Segments\",\n      fields: {\n        customers: \"Customers\",\n        name: \"Name\"\n      },\n      data: {\n        compulsive: \"Compulsive\",\n        collector: \"Collector\",\n        ordered_once: \"Ordered once\",\n        regular: \"Regular\",\n        returns: \"Returns\",\n        reviewer: \"Reviewer\"\n      }\n    }\n  }\n};\n","import vnMessages from './vn';\nimport englishMessages from './en';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\nimport { resolveBrowserLocale } from 'react-admin';\n\nconst messages = {\n  vn: vnMessages,\n  en: englishMessages,\n};\n\nconst i18nProvider = polyglotI18nProvider(\n  locale => messages[locale] ? messages[locale] : messages.vn,\n  resolveBrowserLocale()\n);\n\nexport default i18nProvider;","const checkPermission = (permissions, roles = []) => {\n  const checkArray = roles.map(role => {\n    return permissions.includes(role);\n  })\n  return checkArray.includes(true);\n};\n\nconst adminRoles = ['ADMIN', 'OPERATOR', 'USER'];\n\nexport {\n  checkPermission,\n  adminRoles,\n} ","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { translate } from 'react-admin';\nimport { checkPermission, adminRoles } from '../authProvider/checkPermissions';\n\nconst DashBoard = props => {\n  const { translate, permissions } = props;\n  return permissions && checkPermission(permissions, adminRoles) ? (\n    <Card>\n      <CardHeader title={translate(\"pos.dashboard.welcome.title\")} />\n      <CardContent>{translate(\"pos.dashboard.welcome.content\")}</CardContent>\n    </Card>\n  ) : null\n};\n\nexport default translate(DashBoard);\n","import React from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Title, translate } from 'react-admin';\n\nconst NotFound = props => {\n  const { translate } = props;\n  return (\n    <Card>\n      <Title title=\"pos.notFound.title\" />\n      <CardContent>\n        <h1>404: {translate('pos.notFound.title')}</h1>\n      </CardContent>\n    </Card>\n  )\n};\n\nexport default translate(NotFound);","import * as React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  useTranslate,\n  DashboardMenuItem,\n  MenuItemLink,\n  WithPermissions\n} from 'react-admin';\nimport SubMenu from './SubMenu';\n\n// import accounts from '../components/account';\nimport { checkPermission, adminRoles } from '../authProvider/checkPermissions';\n\nconst Menu = props => {\n  const { onMenuClick, dense } = props;\n  const [state, setState] = useState({\n    menuSales: false,\n    menuCustomers: false,\n  });\n  const translate = useTranslate();\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\n  useSelector((state) => state.theme); // force rerender on theme change\n\n  const handleToggle = (menu) => {\n    setState(state => ({ ...state, [menu]: !state[menu] }));\n  };\n\n  return (\n    <div>\n      {' '}\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n      {/* <WithPermissions\n        render={({ permissions }) =>\n          permissions && checkPermission(permissions, adminRoles) ? (\n            <SubMenu\n              handleToggle={() => handleToggle('menuSales')}\n              isOpen={state.menuSales}\n              sidebarIsOpen={open}\n              name=\"pos.menu.sales\"\n              icon={<accounts.icon />}\n              dense={dense}\n            >\n              <MenuItemLink\n                to={`/accounts`}\n                primaryText={translate(`resources.accounts.name`, {\n                  smart_count: 2,\n                })}\n                leftIcon={<accounts.icon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n              />\n            </SubMenu>\n          ) : null\n        }\n      /> */}\n    </div>\n  );\n};\n\nexport default Menu;\n","import * as React from 'react';\nimport { FC, Fragment, ReactElement } from 'react';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Collapse from '@material-ui/core/Collapse';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n  icon: { minWidth: theme.spacing(5) },\n  sidebarIsOpen: {\n    paddingLeft: 25,\n    transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n  },\n  sidebarIsClosed: {\n    paddingLeft: 0,\n    transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n  },\n}));\n\nconst SubMenu = props => {\n  const {\n    handleToggle,\n    sidebarIsOpen,\n    isOpen,\n    name,\n    icon,\n    children,\n    dense\n  } = props;\n  const translate = useTranslate();\n  const classes = useStyles();\n\n  const header = (\n    <MenuItem dense={dense} button onClick={handleToggle}>\n      <ListItemIcon className={classes.icon}>\n        {isOpen ? <ExpandMore /> : icon}\n      </ListItemIcon>\n      <Typography variant=\"inherit\" color=\"textSecondary\">\n        {translate(name)}\n      </Typography>\n    </MenuItem>\n  );\n\n  return (\n    <Fragment>\n      {sidebarIsOpen || isOpen ? (\n        header\n      ) : (\n          <Tooltip title={translate(name)} placement=\"right\">\n            {header}\n          </Tooltip>\n        )}\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <List\n          dense={dense}\n          component=\"div\"\n          disablePadding\n          className={\n            sidebarIsOpen\n              ? classes.sidebarIsOpen\n              : classes.sidebarIsClosed\n          }\n        >\n          {children}\n        </List>\n        <Divider />\n      </Collapse>\n    </Fragment>\n  );\n};\n\nexport default SubMenu;\n","import React, { useState, useEffect } from 'react';\nimport { Admin, Resource } from 'react-admin';\nimport dataProviderFactory from \"./dataProvider\";\nimport authProvider from './authProvider/authProvider';\nimport i18nProvider from './i18n/i18nProvider';\nimport Dashboard from './layout/DashBoard';\nimport NotFound from './layout/NotFound';\nimport Menu from './layout/Menu';\n// import accounts from './components/account';\n\nconst App = () => {\n  const [dataProvider, setDataProvider] = useState(null);\n  useEffect(() => {\n    const fetchDataProvider = async () => {\n      const dataProviderInstance = await dataProviderFactory(\n        process.env.REACT_APP_DATA_PROVIDER || ''\n      );\n      setDataProvider(\n        // GOTCHA: dataProviderInstance can be a function\n        () => dataProviderInstance\n      );\n    }\n    fetchDataProvider();\n  }, [])\n\n  console.log(\"App -> dataProvider\", dataProvider)\n  if (!dataProvider) {\n    return (\n      <div className=\"loader-container\">\n        <div className=\"loader\">Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <Admin\n      title=\"Shop Acc Admin\"\n      dataProvider={dataProvider}\n      authProvider={authProvider}\n      i18nProvider={i18nProvider}\n      dashboard={Dashboard}\n      menu={Menu}\n      catchAll={NotFound}\n    >\n      {permissions => [\n        <Resource key=\"Accounts\" name=\"accounts\"  />,\n      ]}\n    </Admin>\n  )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}