{"version":3,"sources":["dataProvider/index.js","authProvider/authProvider.js","i18n/vn.js","i18n/en.js","i18n/i18nProvider.js","authProvider/checkPermissions.js","layout/DashBoard.js","layout/NotFound.js","components/settings/utils/styles.js","components/settings/Action.js","custom/TextFieldCustom.js","components/settings/utils/validateForm.js","components/settings/ChangePassWord.js","components/settings/Configuration.js","routes.js","layout/AppBar.js","layout/SubMenu.js","components/account/GridList.js","components/account/AccountList.js","components/account/utils/validate.js","components/account/tabs/InformationProduct.js","components/account/utils/styles.js","components/account/AccountCreate.js","components/account/tabs/PhotoIntroduction.js","components/account/AccountEdit.js","components/account/index.js","layout/Menu.js","layout/Themes.js","layout/Layout.js","components/settings/ThemeReducers.js","App.js","serviceWorker.js","index.js"],"names":["FakeData","type","then","provider","default","refreshTokenHandler","refreshTokenHandlerInterval","setInterval","localStorage","getItem","timeFromGetLastToken","Math","floor","Date","now","checkExpiredTime","BASE_URL","requestRefreshToken","Request","method","body","JSON","stringify","refreshToken","headers","_prepareHeaders","fetch","response","indexOf","status","json","removeLoginInfo","getLocalStorage","catch","err","Promise","reject","refreshTokenBase","process","clearInterval","removeItem","token","expiresIn","webConfigs","decodedToken","decodeJwt","setItem","get","userLogin","_id","Headers","authProvider","login","username","password","request","email","result","Error","error","logout","resolve","checkError","checkAuth","redirecTo","getPermissions","roles","vnMessages","pos","search","configuration","profile","changePassword","passwordSettingTitle","passwordSettingContent","forgetPass","forgetPassSetting","sendMailInfo","sendPhoneInfo","cancel","confirm","reset","required","language","theme","name","light","dark","dashboard","welcome","title","content","subtitle","aor_button","demo_button","menu","sales","catalog","customers","backgrounds","notFound","nationals","vn","el","cn","am","jp","kr","resources","users","dialogTitle","dialogContentText","buttonChangePass","currentPassword","newPassword","verifiedNewPassword","errors","invalidCurrentPassword","invalidVerifiedNewPassword","success","successChangePass","firstName","lastName","gender","avatar","role","statusProducts","stock","outOfStock","accounts","list","create","edit","fields","userName","price","rank","hero","gold","skin","pearl_points","thumbnail","choosesThumbnail","images","choosesImages","activated","numberAcc","tabs","information","photoIntroduction","filter","categoryId","imageId","ranks","titles","label","order","idNumber","dob","address","city","total_spent","description","product","quantity","fieldGroups","identity","backGroundBig","choosesBackGroundBig","backGroundSmall","choosesBackGroundSmall","englishMessages","monthly_revenue","new_orders","pending_reviews","new_customers","pending_orders","items","genres","commands","groups","last_seen_gte","orders","reviews","stats","page","delete","basket","delivery","reference","sum","tax_rate","total","unit_price","customer_id","date_gte","date_lte","total_gte","returned","invoices","date","command_id","products","category_id","height_gte","height_lte","height","image","stock_lte","width_gte","width_lte","width","details","categories","detail","product_id","comment","rating","action","accept","notification","approved_success","approved_error","rejected_success","rejected_error","segments","data","compulsive","collector","ordered_once","regular","returns","reviewer","messages","en","i18nProvider","polyglotI18nProvider","locale","resolveBrowserLocale","checkPermission","permissions","checkArray","map","includes","adminRoles","translate","props","Card","CardHeader","CardContent","Title","useStyles","makeStyles","display","button","margin","text_field","changeTheme","payload","TextFieldCustom","handleChange","handleBlur","values","className","touched","TextField","onChange","onBlur","value","helperText","validateForm","Yup","shape","Transition","forwardRef","ref","Slide","direction","mapDispatchToProps","showNotification","connect","classes","userId","useTranslate","useState","openDialog","setOpenDialog","handleClose","Button","variant","color","onClick","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","initialValues","onSubmit","message","handleSubmitFetch","validationSchema","dirty","handleSubmit","handleReset","DialogActions","disabled","Configuration","useLocale","setLocale","useSetLocale","useSelector","state","dispatch","useDispatch","exact","path","render","flex","textOverflow","whiteSpace","overflow","spacer","ConfigurationMenu","MenuItemLink","to","primaryText","leftIcon","CustomUserMenu","UserMenu","CustomAppBar","AppBar","userMenu","Typography","id","icon","minWidth","spacing","sidebarIsOpen","paddingLeft","transition","sidebarIsClosed","SubMenu","handleToggle","isOpen","children","dense","header","MenuItem","ListItemIcon","Tooltip","placement","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","Divider","root","gridList","tileBar","background","placeholder","backgroundColor","palette","grey","fontSize","marginLeft","link","getColsForWidth","LoadingGridList","nbChildren","fn","nbItems","cellHeight","cols","key","GridListTile","Array","from","length","_","LoadedGridList","ids","basePath","Link","linkToRecord","ImageField","source","record","GridListTileBar","NumberField","locales","options","style","currency","withWidth","loaded","ProductFilter","Filter","TextInput","alwaysOn","BooleanInput","AccountList","sort","field","filters","perPage","pagination","Pagination","rowsPerPageOptions","exporter","validateRequired","InformationProduct","FormTab","formClassName","width_display","width_400","validate","PasswordInput","width_display_margin","NumberInput","SelectInput","choices","parse","STATUS_PRODUCTS","optionText","styles","marginTop","withStyles","Create","actions","TabbedForm","redirect","PhotoIntroduction","setImages","imagesInDb","accountId","inputUpload","useRef","useEffect","isEmpty","ImageInput","e","formData","FormData","files","target","i","append","multiple","preventDefault","current","click","srcImage","src","alt","AccountEditToolbar","Toolbar","SaveButton","Edit","undoable","toolbar","AccountIcon","AccountCreate","AccountEdit","Menu","onMenuClick","menuSales","menuCustomers","setState","admin","ui","sidebarOpen","DashboardMenuItem","WithPermissions","account","smart_count","darkTheme","primary","main","lightTheme","secondary","contrastText","overrides","MuiFilledInput","CustomSidebar","Sidebar","size","CustomLayout","Layout","appBar","sidebar","ThemeReducers","previousState","App","dataProvider","setDataProvider","a","dataProviderFactory","dataProviderInstance","fetchDataProvider","Admin","Dashboard","customRoutes","customReducers","layout","catchAll","NotFound","Resource","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"8QAAMA,EAAW,GACF,WAAAC,GACb,OAAQA,GACN,IAAK,UACH,OAAOD,EACT,IAAK,UACH,OAAO,oDAAiBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WACpD,QACE,OAAOJ,I,2BCHAK,EAAsB,WACjC,IAAIC,EAA8BC,aAAY,WACxCC,aAAaC,QAAQ,gBA2F7B,WACE,IAAIC,EAAuBC,KAAKC,OAC7BC,KAAKC,MAAQN,aAAaC,QAAQ,cAAgB,KAIrD,OADED,aAAaC,QAAQ,aAAeC,EAAuB,GA/FrDK,IAyDV,SAA0BC,GACxB,IAAMC,EAAsB,IAAIC,QAAQF,EAAW,sBAAuB,CACxEG,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,aAAcf,aAAaC,QAAQ,kBAC1De,QAASC,MAEJC,MAAMT,GACVf,MAAK,SAAAyB,GACJ,KAAI,CAAC,IAAK,IAAK,IAAK,MAAO,MAAO,OAAOC,QAAQD,EAASE,SAAW,GAGnE,OAAOF,EAASG,OAFhBC,OAKH7B,MAAK,SAAAyB,GACJ,OAAOK,EAAgBL,MAExBM,OAAM,SAAAC,GAEL,OADAH,IACOI,QAAQC,OAAOF,MA3EpBG,CANSC,cASXP,IACAQ,cAAcjC,MAEf,MAyEL,SAASyB,IACPvB,aAAagC,WAAW,SACxBhC,aAAagC,WAAW,gBACxBhC,aAAagC,WAAW,aACxBhC,aAAagC,WAAW,aACxBhC,aAAagC,WAAW,UACxBhC,aAAagC,WAAW,eACxBhC,aAAagC,WAAW,cAY1B,SAASR,EAAgBL,GAAW,IAC1Bc,EAA+Cd,EAA/Cc,MAAOlB,EAAwCI,EAAxCJ,aAAcmB,EAA0Bf,EAA1Be,UAAWC,EAAehB,EAAfgB,WAClCC,EAAeC,IAAUJ,GAC/BjC,aAAasC,QAAQ,QAASL,GAC9BjC,aAAasC,QAAQ,eAAgBvB,GACrCf,aAAasC,QAAQ,YAAaJ,GAClClC,aAAasC,QAAQ,YAAajC,KAAKC,OACvCN,aAAasC,QAAQ,cAAeC,cAAIH,EAAc,0BACtDpC,aAAasC,QAAQ,SAAUF,EAAaI,UAAUC,KACtDzC,aAAasC,QAAQ,aAAczB,KAAKC,UAAUqB,IAGpD,SAASlB,IACP,OAAO,IAAIyB,QAAQ,CACjB,eAAgB,mBAChB,iBAAkB1C,aAAaC,QAAQ,WAI5B0C,MA5GM,CACnBC,MAAO,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACZC,EAAU,IAAIrC,QAAQF,wBAA2B,CACrDG,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEkC,MAAOH,EAAUC,aACxC9B,QAASC,MAEX,OAAOC,MAAM6B,GACVrD,MAAK,SAAAyB,GACJ,OAAIA,EAASE,OAAS,KAAOF,EAASE,QAAU,IACvCF,EAASG,OACb5B,MAAK,SAAAuD,GACJ,MAAM,IAAIC,MAAMD,EAAOE,UAGtBhC,EAASG,UAEjB5B,MAAK,SAAAyB,GACJK,EAAgBL,GAChBtB,OAED4B,OAAM,SAAAC,GACL,OAAOC,QAAQC,OAAOF,OAG5B0B,OAAQ,WAEN,OADA7B,IACOI,QAAQ0B,WAEjBC,WAAY,SAACH,GACX,IAAM9B,EAAS8B,EAAM9B,OACrB,OAAe,MAAXA,GAA6B,MAAXA,GACpBrB,aAAagC,WAAW,SACjBL,QAAQC,UAEVD,QAAQ0B,WAEjBE,UAAW,kBACTvD,aAAaC,QAAQ,SACjB0B,QAAQ0B,UACR1B,QAAQC,OAAO,CAAE4B,UAAW,OAClCC,eAAgB,WACd,IAAMC,EAAQ1D,aAAaC,QAAQ,eACnC,OAAOyD,EAAQ/B,QAAQ0B,QAAQK,GAAS/B,QAAQC,W,0BC3DrC,6BACV+B,KADL,IAEEC,IAAK,CACHC,OAAQ,mBACRC,cAAe,mBACfC,QAAS,kBACTjB,SAAU,qBACVkB,eAAgB,mCAChBC,qBAAsB,wFACtBC,uBAAwB,8GACxBC,WAAY,6BACZC,kBAAmB,oEACnBC,aAAc,+BACdC,cAAe,4DACfC,OAAQ,WACRC,QAAS,mBACTC,MAAO,QACPC,SAAU,+BACVC,SAAU,mBACVC,MAAO,CACLC,KAAM,kBACNC,MAAO,UACPC,KAAM,YAERC,UAAW,CACTC,QAAS,CACPC,MAAO,iEACPC,QAAS,oEACTC,SAAU,wBACVC,WAAY,0BACZC,YAAa,iCAGjBC,KAAM,CACJC,MAAO,iBACPC,QAAS,YACTC,UAAW,UACXC,YAAa,qBAEfC,SAAU,CACRV,MAAO,4BACPC,QAAS,6DAGbU,UAAW,CACTC,GAAI,gBACJC,GAAI,MACJC,GAAI,kBACJC,GAAI,UACJC,GAAI,qBACJC,GAAI,oBAENC,UAAW,CACTC,MAAO,CACLC,YAAa,mCACbC,kBAAmB,6PACnBC,iBAAkB,iEAClBC,gBAAiB,wCACjBC,YAAa,6CACbC,oBAAqB,+CACrBC,OAAQ,CACNC,uBAAwB,8DACxBC,2BAA4B,mEAE9BC,QAAS,CACPC,kBAAmB,4DAGvBjD,QAAS,CACPc,KAAM,kBACNoC,UAAW,SACXC,SAAU,UACVlE,MAAO,QACPmE,OAAQ,oBACRC,OAAQ,SACRC,KAAM,cAERC,eAAgB,CACdC,MAAO,iBACPC,WAAY,oBAEdC,SAAU,CACR5C,KAAM,UACNK,MAAO,CACLwC,KAAM,uBACNC,OAAQ,mBACRC,KAAM,+BAERC,OAAQ,CACNC,SAAU,kCACVhF,SAAU,qBACViF,MAAO,aACPC,KAAM,OACNC,KAAM,kBACNC,KAAM,UACNC,KAAM,kBACNC,aAAc,2BACdC,UAAW,+BACXC,iBAAkB,yCAClBC,OAAQ,wBACRC,cAAe,gDACfC,UAAW,oBACXpH,OAAQ,qBACRqH,UAAW,kBAEbC,KAAM,CACJC,YAAa,uBACbC,kBAAmB,iCAErBC,OAAQ,CACNC,WAAY,qBACZC,QAAS,qBAGbC,MAAO,CACLpE,KAAM,OACNqE,OAAQ,CACNxB,KAAM,oBACNC,OAAQ,gBACRC,KAAM,4BAERC,OAAQ,CACNhD,KAAM,SAGVa,UAAW,CACTb,KAAM,mBACNK,MAAO,CACLyC,OAAQ,4BACRC,KAAM,uCACNF,KAAM,iCAERyB,MAAO,CACLP,YAAa,eACbQ,MAAO,yBAETvB,OAAQ,CACNZ,UAAW,UACXC,SAAU,SACVlE,MAAO,QACPqG,SAAU,iCACVC,IAAK,eACLC,QAAS,yBACTC,KAAM,oBACNJ,MAAO,wBACPK,YAAa,sBACbC,YAAa,gBACbC,QAAS,qBACTC,SAAU,2BAEZC,YAAa,CACXC,SAAU,eACVP,QAAS,wCACTH,MAAO,wCAGXzD,YAAa,CACXd,KAAM,oBACNK,MAAO,CACLyC,OAAQ,6BACRC,KAAM,wCACNF,KAAM,kCAERG,OAAQ,CACNkC,cAAe,6BACfC,qBAAsB,uCACtBC,gBAAiB,6BACjBC,uBAAwB,4C,SCvKjB,6BACVC,KADL,IAEEvG,IAAK,CACHC,OAAQ,SACRC,cAAe,gBACfE,eAAgB,kBAChBW,SAAU,WACVJ,OAAQ,SACRC,QAAS,UACTC,MAAO,QACPC,SAAU,WACVE,MAAO,CACLC,KAAM,QACNC,MAAO,QACPC,KAAM,QAERC,UAAW,CACToF,gBAAiB,kBACjBC,WAAY,aACZC,gBAAiB,kBACjBC,cAAe,gBACfC,eAAgB,iBAChBpB,MAAO,CACLqB,MACE,6EAEJxF,QAAS,CACPC,MAAO,iCACPC,QAAS,sCACTC,SACE,8JACFC,WAAY,mBACZC,YAAa,yBAGjBC,KAAM,CACJC,MAAO,QACPC,QAAS,UACTC,UAAW,cAGfU,UAAW,CACTC,MAAO,CACLC,YAAa,kBACbC,kBAAmB,oJACnBC,iBAAkB,2BAClBC,gBAAiB,mBACjBC,YAAa,8BACbC,oBAAqB,uCACrBC,OAAQ,CACNC,uBAAwB,2BACxBC,2BAA4B,iCAE9BC,QAAS,CACPC,kBAAmB,6BAGvBjD,QAAS,CACPc,KAAM,UACNoC,UAAW,OACXC,SAAU,UACVlE,MAAO,QACPmE,OAAQ,SACRC,OAAQ,SACRC,KAAM,QAERI,SAAU,CACR5C,KAAM,UACNK,MAAO,CACLwC,KAAM,eACNC,OAAQ,iBACRC,KAAM,gBAERC,OAAQ,CACNC,SAAU,YACVhF,SAAU,WACViF,MAAO,YACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,aAAc,eACdC,UAAW,YACXC,iBAAkB,oBAClBC,OAAQ,SACRC,cAAe,iBACfC,UAAW,YACXpH,OAAQ,SACRqH,UAAW,cAEbC,KAAM,CACJC,YAAa,cACbC,kBAAmB,uBAGvB6B,OAAQ,CACN7F,KAAM,UAERa,UAAW,CACTb,KAAM,0BACNgD,OAAQ,CACN8C,SAAU,SACVC,OAAQ,WACRC,cAAe,gBACfhG,KAAM,OACN4E,YAAa,eAEfd,KAAM,CACJmB,SAAU,WACVP,QAAS,UACTuB,OAAQ,SACRC,QAAS,UACTC,MAAO,SAETC,KAAM,CACJC,OAAQ,oBAGZP,SAAU,CACR9F,KAAM,oBACNK,MAAO,qBACP2C,OAAQ,CACNsD,OAAQ,CACNC,SAAU,WACVC,UAAW,YACXzB,SAAU,WACV0B,IAAK,MACLC,SAAU,WACVC,MAAO,QACPC,WAAY,cAEdC,YAAa,WACbC,SAAU,eACVC,SAAU,gBACVC,UAAW,aACXxK,OAAQ,SACRyK,SAAU,aAGdC,SAAU,CACRlH,KAAM,wBACNgD,OAAQ,CACNmE,KAAM,eACNN,YAAa,WACbO,WAAY,QACZN,SAAU,eACVC,SAAU,gBACVC,UAAW,aACXtC,QAAS,YAGb2C,SAAU,CACRrH,KAAM,sBACNgD,OAAQ,CACNsE,YAAa,WACbC,WAAY,aACZC,WAAY,aACZC,OAAQ,SACRC,MAAO,QACPxE,MAAO,QACPsD,UAAW,YACXmB,UAAW,YACXjF,MAAO,QACPc,UAAW,YACXoE,UAAW,YACXC,UAAW,YACXC,MAAO,SAEThE,KAAM,CACJ4D,MAAO,QACPK,QAAS,UACTlD,YAAa,cACbqB,QAAS,YAGb8B,WAAY,CACVhI,KAAM,2BACNgD,OAAQ,CACNqE,SAAU,aAGdnB,QAAS,CACPlG,KAAM,sBACNiI,OAAQ,gBACRjF,OAAQ,CACN6D,YAAa,WACbO,WAAY,QACZc,WAAY,UACZpB,SAAU,eACVC,SAAU,gBACVI,KAAM,OACNgB,QAAS,UACTC,OAAQ,UAEVC,OAAQ,CACNC,OAAQ,SACRvL,OAAQ,UAEVwL,aAAc,CACZC,iBAAkB,kBAClBC,eAAgB,6BAChBC,iBAAkB,kBAClBC,eAAgB,+BAGpBC,SAAU,CACR5I,KAAM,WACNgD,OAAQ,CACNnC,UAAW,YACXb,KAAM,QAER6I,KAAM,CACJC,WAAY,aACZC,UAAW,YACXC,aAAc,eACdC,QAAS,UACTC,QAAS,UACTC,SAAU,gB,kBCtNZC,EAAW,CACfnI,GAAInC,EACJuK,GAAI/D,GAQSgE,EALMC,aACnB,SAAAC,GAAM,OAAIJ,EAASI,GAAUJ,EAASI,GAAUJ,EAASnI,KACzDwI,e,oCCZIC,EAAkB,SAACC,GAA6B,IAAhB9K,EAAe,uDAAP,GACtC+K,EAAa/K,EAAMgL,KAAI,SAAArH,GAC3B,OAAOmH,EAAYG,SAAStH,MAE9B,OAAOoH,EAAWE,UAAS,IAGvBC,EAAa,CAAC,QAAS,WAAY,QCU1BC,eAVG,SAAAC,GAAU,IAClBD,EAA2BC,EAA3BD,UAAWL,EAAgBM,EAAhBN,YACnB,OAAOA,GAAeD,EAAgBC,EAAaI,GACjD,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY9J,MAAO2J,EAAU,iCAC7B,kBAACI,EAAA,EAAD,KAAcJ,EAAU,mCAExB,Q,QCGSA,eAZE,SAAAC,GAAU,IACjBD,EAAcC,EAAdD,UACR,OACE,kBAACE,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAOhK,MAAM,uBACb,kBAAC+J,EAAA,EAAD,KACE,oCAAUJ,EAAU,4B,2DCHbM,EANGC,YAAW,CAC3BjG,MAAO,CAAEwD,MAAO,OAAQ0C,QAAS,gBACjCC,OAAQ,CAAEC,OAAQ,OAClBC,WAAY,CAAE7C,MAAO,WCHV8C,EAAc,eAAC7K,EAAD,uDAAS,QAAT,MAAgC,CACzDnF,KAH0B,eAI1BiQ,QAAS9K,I,sFCqBI+K,GAtBS,SAAAb,GAAU,IAE9B3F,EAEE2F,EAFF3F,MAAOtE,EAELiK,EAFKjK,KAAM+K,EAEXd,EAFWc,aAAcC,EAEzBf,EAFyBe,WAC3BC,EACEhB,EADFgB,OAAQC,EACNjB,EADMiB,UAAWnJ,EACjBkI,EADiBlI,OAAQoJ,EACzBlB,EADyBkB,QAE7B,OACE,kBAACC,GAAA,EAAD,CACE9G,MAAOA,EACPoG,OAAO,SACP9P,KAAK,WACLoF,KAAMA,EACNqL,SAAUN,EACVO,OAAQN,EACRO,MAAON,EAAOjL,GACdH,UAAQ,EACRqL,UAAWA,EACX5M,MAAOyD,EAAO/B,IAASmL,EAAQnL,GAC/BwL,WAAazJ,EAAO/B,IAASmL,EAAQnL,IAAU+B,EAAO/B,M,UCV7CyL,GARM,SAACzB,GACpB,OAAO0B,OAAaC,MAAM,CACxB/J,gBAAiB8J,OAAa7L,SAASmK,EAAU,iBACjDnI,YAAa6J,OAAa7L,SAASmK,EAAU,iBAC7ClI,oBAAqB4J,OAAa7L,SAASmK,EAAU,oBCYnD4B,GAAaC,sBAAW,SAAoB5B,EAAO6B,GACvD,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAAS7B,OA0IvCgC,GAAqB,CACzBC,uBAGaC,eAAQ,KAAMF,GAAdE,EA3IQ,SAAAlC,GAAU,IACvBiC,EAAqBjC,EAArBiC,iBACFE,EAAU9B,IACV+B,EAASlR,aAAaC,QAAQ,UAC9B4O,EAAYsC,cAJY,EAKMC,oBAAS,GALf,mBAKvBC,EALuB,KAKXC,EALW,KAWxBC,EAAc,WAClBD,GAAc,IAgChB,OACE,oCACE,kBAACE,EAAA,EAAD,CACEC,QAAQ,YACR1B,UAAWkB,EAAQ3B,OACnBoC,MAAOL,EAAa,UAAY,UAChCM,QA3CkB,WACtBL,GAAeD,KA4CVxC,EAAU,qCAEb,kBAAC+C,EAAA,EAAD,CACEC,KAAMR,EACNS,oBAAqBrB,GACrBsB,aAAW,EACXC,QAAST,GAET,kBAACU,GAAA,EAAD,KACGpD,EAAU,gCAEb,kBAACqD,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGtD,EAAU,sCAEb,kBAAC,KAAD,CACEuD,cAAe,CACb3L,gBAAiB,GACjBC,YAAa,GACbC,oBAAqB,IAEvB0L,SAAU,SAACvC,GAAD,OA1DM,SAACA,GACzB,IACM/M,EAAU,IAAIrC,QADHoB,YACmB,gCAA4BoP,GAAU,CACxEvQ,OAAQ,MACRC,KAAMC,KAAKC,UAAUgP,GACrB9O,QAAS,CAAE,eAAgB,sBAE7B,OAAOE,MAAM6B,GACVrD,MAAK,SAAAyB,GACJ,OAAIA,EAASE,QAAU,IACdF,EAASG,OACb5B,MAAK,SAAAuD,GACJ8N,EAAiBlC,EAAU5L,EAAOE,OAAQ,cAGzChC,EAASG,OACb5B,MAAK,SAAAuD,GACJ8N,EAAiBlC,EAAU5L,EAAOqP,UAClChB,GAAc,SAwCQiB,CAAkBzC,IACxC0C,iBAAkBlC,GAAazB,KAE9B,SAACC,GAAW,IAET2D,EAGE3D,EAHF2D,MACAC,EAEE5D,EAFF4D,aACAC,EACE7D,EADF6D,YAEF,OACE,kBAAC,KAAD,CAAMN,SAAUK,GACd,kBAAC,GAAD,eACEvJ,MAAO0F,EAAU,mCACjBhK,KAAK,kBACLkL,UAAWkB,EAAQzB,YACfV,IAEN,kBAAC,GAAD,eACE3F,MAAO0F,EAAU,+BACjBhK,KAAK,cACLkL,UAAWkB,EAAQzB,YACfV,IAEN,kBAAC,GAAD,eACE3F,MAAO0F,EAAU,uCACjBhK,KAAK,sBACLkL,UAAWkB,EAAQzB,YACfV,IAEN,kBAAC8D,EAAA,EAAD,KACE,kBAACpB,EAAA,EAAD,CACEG,QAASJ,EACTG,MAAM,WAEL7C,EAAU,eAEb,kBAAC2C,EAAA,EAAD,CACE/R,KAAK,SACLoT,UAAWJ,EACXf,MAAM,WAEL7C,EAAU,gBAEb,kBAAC2C,EAAA,EAAD,CACE/R,KAAK,SACLiS,MAAM,UACNC,QAASgB,EACTE,UAAWJ,GAEV5D,EAAU,yBCtElBiE,GA3DO,WACpB,IAAMjE,EAAYsC,cACZ9C,EAAS0E,cACTC,EAAYC,cACZhC,EAAU9B,IACVvK,EAAQsO,aAAY,SAAAC,GAAK,OAAIA,EAAMvO,SACnCwO,EAAWC,cAEjB,OACE,kBAACtE,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAOhK,MAAO2J,EAAU,uBACxB,kBAACI,EAAA,EAAD,KACE,yBAAKc,UAAWkB,EAAQ9H,OACrB0F,EAAU,mBAEb,kBAAC2C,EAAA,EAAD,CACEC,QAAQ,YACR1B,UAAWkB,EAAQ3B,OACnBoC,MAAiB,UAAV9M,EAAoB,UAAY,UACvC+M,QAAS,kBAAMyB,EAAS3D,EAAY,YAEnCZ,EAAU,oBAEb,kBAAC2C,EAAA,EAAD,CACEC,QAAQ,YACR1B,UAAWkB,EAAQ3B,OACnBoC,MAAiB,SAAV9M,EAAmB,UAAY,UACtC+M,QAAS,kBAAMyB,EAAS3D,EAAY,WAEnCZ,EAAU,oBAGf,kBAACI,EAAA,EAAD,KACE,yBAAKc,UAAWkB,EAAQ9H,OAAQ0F,EAAU,iBAC1C,kBAAC2C,EAAA,EAAD,CACEC,QAAQ,YACR1B,UAAWkB,EAAQ3B,OACnBoC,MAAkB,OAAXrD,EAAkB,UAAY,UACrCsD,QAAS,kBAAMqB,EAAU,QAJ3B,MAQA,kBAACxB,EAAA,EAAD,CACEC,QAAQ,YACR1B,UAAWkB,EAAQ3B,OACnBoC,MAAkB,OAAXrD,EAAkB,UAAY,UACrCsD,QAAS,kBAAMqB,EAAU,QAJ3B,OASF,kBAAC/D,EAAA,EAAD,KACE,yBAAKc,UAAWkB,EAAQ9H,OAAQ0F,EAAU,uBAC1C,kBAAC,GAAD,SChEO,IACX,gBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,iBAAiBC,OAAQ,kBAAM,gBAAC,GAAD,U,gFCE/CrE,GAAYC,YAAW,CAC3BlK,MAAO,CACLuO,KAAM,EACNC,aAAc,WACdC,WAAY,SACZC,SAAU,UAEZC,OAAQ,CACNJ,KAAM,KAIJK,GAAoBpD,sBAAW,SAAC5B,EAAO6B,GAC3C,IAAM9B,EAAYsC,cAClB,OACE,gBAAC4C,GAAA,EAAD,CACEpD,IAAKA,EACLqD,GAAG,iBACHC,YAAapF,EAAU,qBACvBqF,SAAU,gBAAC,KAAD,MACVvC,QAAS7C,EAAM6C,aAKfwC,GAAiB,SAAArF,GAAK,OAC1B,gBAACsF,GAAA,EAAatF,EACZ,gBAACgF,GAAD,QAqBWO,GAjBM,SAAAvF,GACnB,IAAMmC,EAAU9B,KAChB,OACE,gBAACmF,GAAA,EAAD,iBACMxF,EADN,CAEEyF,SAAU,gBAAC,GAAD,QACV,gBAACC,GAAA,EAAD,CACE/C,QAAQ,KACRC,MAAM,UACN3B,UAAWkB,EAAQ/L,MACnBuP,GAAG,sBAEL,wBAAM1E,UAAWkB,EAAQ4C,W,+GCrCzB1E,GAAYC,aAAW,SAAAxK,GAAK,MAAK,CACrC8P,KAAM,CAAEC,SAAU/P,EAAMgQ,QAAQ,IAChCC,cAAe,CACbC,YAAa,GACbC,WAAY,uDAEdC,gBAAiB,CACfF,YAAa,EACbC,WAAY,2DAwDDE,GApDC,SAAAnG,GAAU,IAEtBoG,EAOEpG,EAPFoG,aACAL,EAME/F,EANF+F,cACAM,EAKErG,EALFqG,OACAtQ,EAIEiK,EAJFjK,KACA6P,EAGE5F,EAHF4F,KACAU,EAEEtG,EAFFsG,SACAC,EACEvG,EADFuG,MAEIxG,EAAYsC,cACZF,EAAU9B,KAEVmG,EACJ,gBAACC,GAAA,EAAD,CAAUF,MAAOA,EAAO/F,QAAM,EAACqC,QAASuD,GACtC,gBAACM,GAAA,EAAD,CAAczF,UAAWkB,EAAQyD,MAC9BS,EAAS,gBAAC,KAAD,MAAiBT,GAE7B,gBAACF,GAAA,EAAD,CAAY/C,QAAQ,UAAUC,MAAM,iBACjC7C,EAAUhK,KAKjB,OACE,gBAAC,WAAD,KACGgQ,GAAiBM,EAChBG,EAEE,gBAACG,GAAA,EAAD,CAASvQ,MAAO2J,EAAUhK,GAAO6Q,UAAU,SACxCJ,GAGP,gBAACK,GAAA,EAAD,CAAUC,GAAIT,EAAQU,QAAQ,OAAOC,eAAa,GAChD,gBAACC,GAAA,EAAD,CACEV,MAAOA,EACPW,UAAU,MACVC,gBAAc,EACdlG,UACE8E,EACI5D,EAAQ4D,cACR5D,EAAQ+D,iBAGbI,GAEH,gBAACc,GAAA,EAAD,S,gKC5DF/G,GAAYC,aAAW,SAAAxK,GAAK,MAAK,CACrCuR,KAAM,CACJ5G,OAAQ,QAEV6G,SAAU,CACRzJ,MAAO,OACP4C,OAAQ,GAEV8G,QAAS,CACPC,WACE,sFAEJC,YAAa,CACXC,gBAAiB5R,EAAM6R,QAAQC,KAAK,KACpCpK,OAAQ,QAEVvE,MAAO,CACLsH,QAAS,SACTsH,SAAU,OAEZtO,UAAW,CACTuO,WAAY,QAEdC,KAAM,CACJnF,MAAO,YAILoF,GAAkB,SAAAnK,GACtB,MAAc,OAAVA,EAAuB,EACb,OAAVA,EAAuB,EACb,OAAVA,EAAuB,EACb,OAAVA,EAAuB,EACpB,GAMHoK,GAAkB,SAAC,GAA6B,IAHvCC,EAAYC,EAGAtK,EAA0B,EAA1BA,MAA0B,IAAnBuK,eAAmB,MAAT,GAAS,EAC7CjG,EAAU9B,KAChB,OACE,yBAAKY,UAAWkB,EAAQkF,MACtB,kBAAC,KAAD,CACEgB,WAAY,IACZC,KAAMN,GAAgBnK,GACtBoD,UAAWkB,EAAQmF,UAElB,KAZMY,EAaAE,EAbYD,EAaH,SAAAI,GAAG,OACjB,kBAACC,GAAA,EAAD,CAAcD,IAAKA,GACjB,yBAAKtH,UAAWkB,EAAQsF,gBAdlCgB,MAAMC,KAAK,CAAEC,OAAQT,IAAc,SAACU,EAAGL,GAAJ,OAAYJ,EAAGI,UAsB9CM,GAAiB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,IAAKlK,EAA4B,EAA5BA,KAAMmK,EAAsB,EAAtBA,SAAUlL,EAAY,EAAZA,MACvCsE,EAAU9B,KAChB,OACE,yBAAKY,UAAWkB,EAAQkF,MACtB,kBAAC,KAAD,CACEgB,WAAY,IACZC,KAAMN,GAAgBnK,GACtBoD,UAAWkB,EAAQmF,UAElBwB,EAAIlJ,KAAI,SAAA+F,GACP,OACE,kBAAC6C,GAAA,EAAD,CACEtB,UAAW8B,KACXT,IAAK5C,EACLT,GAAI+D,aAAaF,EAAUnK,EAAK+G,GAAIA,KAEpC,kBAACuD,GAAA,EAAD,CACEC,OAAO,YACPC,OAAQxK,EAAK+G,GACb1E,UAAWkB,EAAQ5I,YAErB,kBAAC8P,GAAA,EAAD,CACEpI,UAAWkB,EAAQoF,QACnBnR,MAAO3C,cAAImL,EAAK+G,GAAK,YACrBrP,SACE,8BACE,kBAACgT,GAAA,EAAD,CACErI,UAAWkB,EAAQlJ,MACnBkQ,OAAO,QACPC,OAAQxK,EAAK+G,GACb/C,MAAM,UACN2G,QAAQ,QACRC,QAAS,CACPC,MAAO,WACPC,SAAU,mBAiBnBC,mBAHE,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAW5J,EAAd,kCACf4J,EAAS,kBAAC,GAAmB5J,GAAY,kBAAC,GAAoBA,MC7G1D6J,GAAgB,SAAA7J,GAAK,OACzB,kBAAC8J,GAAA,EAAW9J,EACV,kBAAC+J,GAAA,EAAD,CACE1P,MAAM,mBACN8O,OAAO,IAAIa,UAAQ,IAErB,kBAACC,GAAA,EAAD,CAAcd,OAAO,gBAoBVe,GAhBK,SAAC,GAA0B,EAAxB/H,QAAyB,IAAbnC,EAAY,4BAC7C,OACE,kBAAC,KAAD,eACE5J,MAAM,iCACF4J,EAFN,CAGEmK,KAAM,CAAEC,MAAO,KAAM9P,MAAO,OAC5B+P,QAAS,kBAAC,GAAD,MACTC,QAAS,GACTC,WAAY,kBAACC,GAAA,EAAD,CAAYC,mBAAoB,CAAC,GAAI,GAAI,MACrDC,UAAU,IAEV,kBAAC,GAAD,Q,sEC7BAC,GAAmB,CAAC/U,gBCsFXgV,GA7EY,SAAA5K,GAAU,IAC3BmC,EAAYnC,EAAZmC,QACR,OACE,kBAAC0I,GAAA,EAAD,iBACM7K,EADN,CAEE3F,MAAM,wCAEN,kBAAC0P,GAAA,EAAD,CACEZ,OAAO,WACP2B,cAAe3I,EAAQ4I,cACvB9J,UAAWkB,EAAQ6I,UACnBC,SAAUN,KAEZ,kBAACO,GAAA,EAAD,CACE/B,OAAO,WACP2B,cAAe3I,EAAQgJ,qBACvBlK,UAAWkB,EAAQ6I,UACnBC,SAAUN,KAEZ,6BACA,kBAACZ,GAAA,EAAD,CACEZ,OAAO,OACP2B,cAAe3I,EAAQ4I,cACvB9J,UAAWkB,EAAQ6I,YAErB,kBAACI,GAAA,EAAD,CACEjC,OAAO,QACP2B,cAAe3I,EAAQgJ,qBACvBlK,UAAWkB,EAAQ6I,UACnBC,SAAUN,KAEZ,6BACA,kBAACS,GAAA,EAAD,CACEjC,OAAO,OACP2B,cAAe3I,EAAQ4I,cACvB9J,UAAWkB,EAAQ6I,UACnBC,SAAUN,KAEZ,kBAACS,GAAA,EAAD,CACEjC,OAAO,OACP2B,cAAe3I,EAAQgJ,qBACvBlK,UAAWkB,EAAQ6I,UACnBC,SAAUN,KAEZ,6BACA,kBAACS,GAAA,EAAD,CACEjC,OAAO,OACP2B,cAAe3I,EAAQ4I,cACvB9J,UAAWkB,EAAQ6I,UACnBC,SAAUN,KAEZ,kBAACS,GAAA,EAAD,CACEjC,OAAO,eACP2B,cAAe3I,EAAQgJ,qBACvBlK,UAAWkB,EAAQ6I,UACnBC,SAAUN,KAEZ,6BACA,kBAACU,GAAA,EAAD,CACEC,QAASvZ,KAAKwZ,MAAMra,aAAamC,YAAYmY,gBAC7CC,WAAW,OACXtC,OAAO,SACP2B,cAAe3I,EAAQ4I,cACvB9J,UAAWkB,EAAQ6I,UACnBC,SAAUN,KAEZ,kBAACZ,GAAA,EAAD,CACEZ,OAAO,YACP2B,cAAe3I,EAAQgJ,qBACvBlK,UAAWkB,EAAQ6I,YAErB,6BACA,kBAACf,GAAA,EAAD,CAAcd,OAAO,gB,QCrEZuC,GAdA,CACbX,cAAe,CAAExK,QAAS,gBAC1B4K,qBAAsB,CAAE5K,QAAS,eAAgBuH,WAAY,QAC7DkD,UAAW,CAAEnN,MAAO,SACpBwJ,KAAM,CACJ5G,OAAQ,OACRkL,UAAW,QAEbrE,SAAU,CACRzJ,MAAO,OACP4C,OAAQ,ICaGmL,gBAAWF,GAAXE,EAdO,SAAA5L,GACpB,OACE,kBAAC6L,GAAA,EAAD,eACEzV,MAAM,kCACN0V,QAAS,MACL9L,GAEJ,kBAAC+L,GAAA,EAAD,CAAYC,SAAS,QACnB,kBAAC,GAAuBhM,Q,6DC4FjBiM,GAnGW,SAAAjM,GAExB,IAEQmC,EAAoBnC,EAApBmC,QAASiH,EAAWpJ,EAAXoJ,OAJgB,EAKL9G,mBAAS,IALJ,mBAK1B7I,EAL0B,KAKlByS,EALkB,KAO3BC,EAAa1Y,cAAI2V,EAAQ,WAAa,GACtCgD,EAAY3Y,cAAIuM,EAAO,MACvBqM,EAAcC,iBAAO,MAmC3B,OANAC,qBAAU,WACHC,kBAAQL,IACXD,EAAUC,KAEX,CAACA,IAGF,kBAACtB,GAAA,EAAD,iBACM7K,EADN,CAEE3F,MAAM,8CAEN,kBAAC6O,GAAA,EAAD,CACEC,OAAO,YACP9O,MAAM,wCAER,kBAACoS,GAAA,EAAD,CACEtD,OAAO,YACP9O,MAAM,6CACNgE,OAAO,WAEP,kBAAC6K,GAAA,EAAD,CACEC,OAAO,SAGX,yBAAKM,MAAO,CAAE5L,MAAO,SACnB,8BACE,2BACE4L,MAAO,CAAElJ,QAAS,QAClB5P,KAAK,OACLyQ,SAnDiB,SAAAsL,GAGzB,IAFA,IAAMC,EAAW,IAAIC,SACfC,EAAQH,EAAEI,OAAOD,MACdE,EAAI,EAAGA,EAAIF,EAAMlE,OAAQoE,IAChCJ,EAASK,OAAT,SAA0BH,EAAME,IAElC,IAAM9Y,EAAU,IAAIrC,QApBLoB,YAoBqB,wBAAoBoZ,GAAa,CACnEva,OAAQ,MACRC,KAAM6a,IAER,OAAOva,MAAM6B,GACVrD,MAAK,SAAAyB,GACJA,EAASG,OACN5B,MAAK,SAAAuD,GACJ+X,EAAU/X,EAAOsF,cAGtB9G,OAAM,SAAAC,GACL,OAAOC,QAAQC,OAAOF,OAkClBmD,KAAK,SACL8L,IAAKwK,EACLY,UAAU,IAEZ,4BAAQxD,MAAO,CAAE5L,MAAO,OAAQL,OAAQ,SAAWqF,QA7DtC,SAAA6J,GACnBA,EAAEQ,iBACFb,EAAYc,QAAQC,UA4DZ,yBAAK3D,MAAO,CAAEhJ,OAAQ,QACpB,kBAAC,KAAD,OAEF,yBAAKgJ,MAAO,CAAEhJ,OAAQ,SAAtB,uBAKJ,yBAAKQ,UAAWkB,EAAQkF,MACtB,kBAAC,KAAD,CACEgB,WAAY,IACZpH,UAAWkB,EAAQmF,UAElB7N,GAAUA,EAAOmG,KAAI,SAAAnC,GACpB,IAAM4P,EAAQ,UArFTra,YAqFS,YAAkByK,EAAMgH,MACtC,OACE,yBAAK8D,IAAK9K,EAAMkI,GAAI2H,IAAKD,EAAUE,IAAI,QAAQ9D,MAAO,CAAE5L,MAAO,mBCtFzE2P,GAAqBzN,aAAU,cAAGA,UAAH,IAAiBC,EAAjB,qCACnC,kBAACyN,GAAA,EAAYzN,EACX,kBAAC0N,GAAA,EAAD,UAmBW9B,gBAAWF,GAAXE,EAfK,SAAA5L,GAClB,OACE,kBAAC2N,GAAA,EAAD,eACEvX,MAAM,iCACF4J,EAFN,CAGE4N,UAAU,IAEV,kBAAC7B,GAAA,EAAD,CAAY8B,QAAS,kBAACL,GAAD,OACnB,kBAAC,GAAuBxN,GACxB,kBAAC,GAAiBA,QCvBX,IACb4F,KAAMkI,KACNlV,KAAMsR,GACNrR,OAAQkV,GACRjV,KAAMkV,ICoDOC,GA/CF,SAAAjO,GAAU,IACbkO,EAAuBlO,EAAvBkO,YAAa3H,EAAUvG,EAAVuG,MADD,EAEMjE,mBAAS,CACjC6L,WAAW,EACXC,eAAe,IAJG,mBAEb/J,EAFa,KAENgK,EAFM,KAMdtO,EAAYsC,cACZU,EAAOqB,aAAY,SAACC,GAAD,OAAWA,EAAMiK,MAAMC,GAAGC,eACnDpK,aAAY,SAACC,GAAD,OAAWA,EAAMvO,SAM7B,OACE,2BACG,IACD,gBAAC2Y,GAAA,EAAD,CAAmB5L,QAASqL,EAAanI,cAAehD,IACxD,gBAAC2L,GAAA,EAAD,CACEhK,OAAQ,gBAAGhF,EAAH,EAAGA,YAAH,OACNA,GAAeD,EAAgBC,EAAaI,GAC1C,gBAAC,GAAD,CACEsG,aAAc,kBAZJ3P,EAYuB,iBAX3C4X,GAAS,SAAAhK,GAAK,kCAAUA,GAAV,mBAAkB5N,GAAQ4N,EAAM5N,QAD3B,IAACA,GAaV4P,OAAQhC,EAAM8J,UACdpI,cAAehD,EACfhN,KAAK,iBACL6P,KAAM,gBAAC+I,GAAS/I,KAAV,MACNW,MAAOA,GAEP,gBAACtB,GAAA,EAAD,CACEC,GAAE,YACFC,YAAapF,EAAU,0BAA2B,CAChD6O,YAAa,IAEfxJ,SAAU,gBAACuJ,GAAS/I,KAAV,MACV/C,QAASqL,EACTnI,cAAehD,EACfwD,MAAOA,KAGT,UCtDDsI,GAAY,CACvBlH,QAAS,CACPmH,QAAS,CACPC,KAAM,WAERpe,KAAM,SAIGqe,GAAa,CACxBrH,QAAS,CACPsH,UAAW,CACTjZ,MAAO,UACP+Y,KAAM,UACN9Y,KAAM,UACNiZ,aAAc,SAGlBC,UAAW,CACTC,eAAgB,CACd/H,KAAM,CACJK,gBAAiB,sBACjB,aAAc,CACZA,gBAAiB,2BChBrB2H,GAAgB,SAAArP,GAAK,OAAI,gBAACsP,GAAA,EAAD,iBAAatP,EAAb,CAAoBuP,KAAM,QAiB1CC,GAfM,SAAAxP,GACnB,IAAMlK,EAAQsO,aAAY,SAACC,GAAD,MACR,SAAhBA,EAAMvO,MAAmB+Y,GAAYG,MAEvC,OACE,gBAACS,GAAA,EAAD,iBACMzP,EADN,CAEE0P,OAAQlK,GACRmK,QAASN,GACT5Y,KAAMwX,GACNnY,MAAOA,MCVE8Z,GAPO,WAAoD,IAAnDC,EAAkD,uDAAlC,QAASzR,EAAyB,uDAAhBuC,EACvD,MpBH0B,iBoBGtBvC,EAAOzN,KACFyN,EAAOwC,QAETiP,GCiDMC,GA1CH,WAAO,IAAD,EACwBxN,mBAAS,MADjC,mBACTyN,EADS,KACKC,EADL,KAgBhB,OAdAzD,qBAAU,WACRxb,IACuB,uCAAG,4BAAAkf,EAAA,sEACWC,EACjCld,WAFsB,OAClBmd,EADkB,OAIxBH,GAEE,kBAAMG,KANgB,2CAAH,oDASvBC,KACC,IAEEL,EASH,kBAACM,EAAA,EAAD,CACEja,MAAM,iBACN2Z,aAAcA,EACdlc,aAAcA,EACdwL,aAAcA,EACdnJ,UAAWoa,EACXC,aAAcA,GACdC,eAAgB,CAAE1a,MAAO8Z,IACzBa,OAAQhB,GACRiB,SAAUC,IAET,SAAAjR,GAAW,MAAI,CACd,kBAACkR,EAAA,EAAD,eAAUrI,IAAI,WAAWxS,KAAK,YAAgB4C,SAnBhD,yBAAKsI,UAAU,oBACb,yBAAKA,UAAU,UAAf,gBCpBY4P,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASxM,OACP,kBAAC,IAAMyM,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5gB,MAAK,SAAA6gB,GACJA,EAAaC,gBAEd/e,OAAM,SAAA0B,GACLsd,QAAQtd,MAAMA,EAAMmP,c","file":"static/js/main.0cbbcd23.chunk.js","sourcesContent":["const FakeData = [];\nexport default type => {\n  switch (type) {\n    case \"fakeapi\":\n      return FakeData;\n    case \"restapi\":\n      return import('./rest').then(provider => provider.default);\n    default:\n      return FakeData;\n  }\n};\n","import decodeJwt from 'jwt-decode';\nimport { get } from 'lodash';\n\nconst BASE_URL = process.env.REACT_APP_REST_API_AUTHENTICATE_URL;\n\nexport const refreshTokenHandler = () => {\n  var refreshTokenHandlerInterval = setInterval(function () {\n    if (localStorage.getItem('refreshToken')) {\n      if (checkExpiredTime()) {\n        refreshTokenBase(BASE_URL);\n      }\n    } else {\n      removeLoginInfo();\n      clearInterval(refreshTokenHandlerInterval);\n    }\n  }, 1000);\n};\n\nconst authProvider = {\n  login: ({ username, password }) => {\n    const request = new Request(BASE_URL + \"/user/logins\", {\n      method: 'POST',\n      body: JSON.stringify({ email: username, password }),\n      headers: _prepareHeaders(),\n    });\n    return fetch(request)\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n          return response.json()\n            .then(result => {\n              throw new Error(result.error)\n            })\n        }\n        return response.json();\n      })\n      .then(response => {\n        getLocalStorage(response)\n        refreshTokenHandler()\n      })\n      .catch(err => {\n        return Promise.reject(err)\n      })\n  },\n  logout: () => {\n    removeLoginInfo();\n    return Promise.resolve();\n  },\n  checkError: (error) => {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  checkAuth: () =>\n    localStorage.getItem('token')\n      ? Promise.resolve()\n      : Promise.reject({ redirecTo: \"/\" }),\n  getPermissions: () => {\n    const roles = localStorage.getItem('permissions');\n    return roles ? Promise.resolve(roles) : Promise.reject();\n  }\n};\n\nfunction refreshTokenBase(BASE_URL) {\n  const requestRefreshToken = new Request(BASE_URL + '/user/refreshTokens', {\n    method: 'POST',\n    body: JSON.stringify({ refreshToken: localStorage.getItem('refreshToken') }),\n    headers: _prepareHeaders()\n  })\n  return fetch(requestRefreshToken)\n    .then(response => {\n      if ([500, 401, 400, '500', '401', '400'].indexOf(response.status) >= 0) {\n        removeLoginInfo();\n      } else {\n        return response.json();\n      }\n    })\n    .then(response => {\n      return getLocalStorage(response);\n    })\n    .catch(err => {\n      removeLoginInfo();\n      return Promise.reject(err);\n    })\n};\n\nfunction removeLoginInfo() {\n  localStorage.removeItem('token');\n  localStorage.removeItem('refreshToken');\n  localStorage.removeItem('expiresIn');\n  localStorage.removeItem('expiresAt');\n  localStorage.removeItem('userId');\n  localStorage.removeItem('permissions');\n  localStorage.removeItem('webConfigs');\n};\n\nfunction checkExpiredTime() {\n  let timeFromGetLastToken = Math.floor(\n    (Date.now() - localStorage.getItem('expiresAt')) / 1000\n  );\n  const callRefresh =\n    localStorage.getItem('expiresIn') - timeFromGetLastToken < 30;\n  return callRefresh;\n};\n\nfunction getLocalStorage(response) {\n  const { token, refreshToken, expiresIn, webConfigs } = response;\n  const decodedToken = decodeJwt(token);\n  localStorage.setItem('token', token);\n  localStorage.setItem('refreshToken', refreshToken);\n  localStorage.setItem('expiresIn', expiresIn);\n  localStorage.setItem('expiresAt', Date.now());\n  localStorage.setItem('permissions', get(decodedToken, 'userLogin.permissions'));\n  localStorage.setItem('userId', decodedToken.userLogin._id);\n  localStorage.setItem('webConfigs', JSON.stringify(webConfigs));\n};;\n\nfunction _prepareHeaders() {\n  return new Headers({\n    \"Content-Type\": \"application/json\",\n    \"X-Access-Token\": localStorage.getItem(\"token\")\n  });\n};\n\nexport default authProvider;","import vnMessages from \"ra-language-vietnamese\";\n\nexport default {\n  ...vnMessages,\n  pos: {\n    search: \"Tìm kiếm\",\n    configuration: \"Cấu hình\",\n    profile: 'Hồ sơ',\n    password: \"Mật khẩu\",\n    changePassword: \"Đổi mật khẩu\",\n    passwordSettingTitle: \"Bạn có chắc chắn muốn thay đổi mật khẩu ? \",\n    passwordSettingContent: \"Nếu chắc chắn, xin hãy nhập kỹ mật khẩu cần thay đổi !\",\n    forgetPass: \"Quên mật khẩu\",\n    forgetPassSetting: \"Bạn bị quên hoặc mất mật khẩu ? \",\n    sendMailInfo: \"Nhận mã từ mail\",\n    sendPhoneInfo: \"Nhận mã từ số điện thoại\",\n    cancel: \"Hủy\",\n    confirm: \"Xác nhận\",\n    reset: 'Reset',\n    required: 'Bắt buộc nhập',\n    language: \"Ngôn ngữ\",\n    theme: {\n      name: \"Màu nền\",\n      light: \"Sáng\",\n      dark: \"Tối\"\n    },\n    dashboard: {\n      welcome: {\n        title: \"Chào mừng đến với trang của tôi\",\n        content: \"Chào mừng đến với trang quản lý...\",\n        subtitle: \"Phụ đề\",\n        aor_button: \"Site web de react-admin\",\n        demo_button: \"Code source de cette démo\"\n      }\n    },\n    menu: {\n      sales: \"Bán hàng\",\n      catalog: \"Catalogue\",\n      customers: \"Clients\",\n      backgrounds: 'Ảnh nền'\n    },\n    notFound: {\n      title: \"Không tìm thấy\",\n      content: \"Không tìm thấy trang bạn cần tìm\"\n    }\n  },\n  nationals: {\n    vn: 'Việt Nam',\n    el: 'Anh',\n    cn: 'Trung Quốc',\n    am: 'Mỹ',\n    jp: 'Nhật Bản',\n    kr: 'Hàn Quốc'\n  },\n  resources: {\n    users: {\n      dialogTitle: 'Đổi mật khẩu',\n      dialogContentText: 'Để đổi mật khẩu, vui lòng nhập mật khẩu cũ và mật khẩu muốn đổi của bạn tại đây, Chúng tôi sẽ gửi thông tin cập nhật!',\n      buttonChangePass: 'Nhấn vào để đổi mật khẩu',\n      currentPassword: 'Mật khẩu hiện tại',\n      newPassword: 'Mật khẩu muốn đổi',\n      verifiedNewPassword: 'Xác nhận mật khẩu mới',\n      errors: {\n        invalidCurrentPassword: 'Mật khẩu hiện tại không đúng',\n        invalidVerifiedNewPassword: 'Xác nhận mật khẩu không trùng khớp'\n      },\n      success: {\n        successChangePass: 'Thay đổi mật khẩu thành công!'\n      }\n    },\n    profile: {\n      name: 'Hồ sơ',\n      firstName: 'Tên',\n      lastName: 'Họ',\n      email: 'Email',\n      gender: 'Giới tính',\n      avatar: 'Avatar',\n      role: 'Quyền',\n    },\n    statusProducts: {\n      stock: 'Còn hàng',\n      outOfStock: 'Hết hàng'\n    },\n    accounts: {\n      name: 'Account',\n      title: {\n        list: 'Danh sách Account',\n        create: 'Tạo Account',\n        edit: 'Chỉnh sửa Account',\n      },\n      fields: {\n        userName: 'Tên đăng nhập',\n        password: 'Mật khẩu',\n        price: 'Giá Acc',\n        rank: 'Rank',\n        hero: 'Tướng',\n        gold: 'Vàng',\n        skin: 'Trang phục',\n        pearl_points: 'Điểm ngọc',\n        thumbnail: 'Ảnh bìa của acc',\n        choosesThumbnail: 'Chọn ảnh bìa của acc',\n        images: 'Ảnh của acc',\n        choosesImages: 'Chọn ảnh chi tiết của acc',\n        activated: 'Kích hoạt',\n        status: 'Trạng thái',\n        numberAcc: 'Số Id Acc'\n      },\n      tabs: {\n        information: 'Thông tin Account',\n        photoIntroduction: 'Ảnh giới thiệu',\n      },\n      filter: {\n        categoryId: 'Thể loại',\n        imageId: 'Hình ảnh'\n      }\n    },\n    ranks: {\n      name: 'Rank',\n      titles: {\n        list: 'Danh sách Rank',\n        create: 'Tạo Rank',\n        edit: 'Chỉnh sửa Rank',\n      },\n      fields: {\n        name: 'Rank'\n      }\n    },\n    customers: {\n      name: 'Khách hàng',\n      title: {\n        create: 'Tạo khách hàng',\n        edit: 'Chỉnh sửa khách hàng',\n        list: 'Danh sách khách hàng'\n      },\n      label: {\n        information: 'Thông tin',\n        order: 'Đơn hàng'\n      },\n      fields: {\n        firstName: 'Họ',\n        lastName: 'Tên',\n        email: 'Email',\n        idNumber: 'Chứng minh nhân dân',\n        dob: 'Ngày sinh',\n        address: 'Địa chỉ',\n        city: 'Thành phố',\n        order: 'Đặt hàng',\n        total_spent: 'Tổng tiền',\n        description: 'Nội dung',\n        product: 'Sản phẩm',\n        quantity: 'Số lượng',\n      },\n      fieldGroups: {\n        identity: 'Danh tính',\n        address: 'Địa chỉ sinh sống',\n        order: 'Đơn đặt hàng'\n      }\n    },\n    backgrounds: {\n      name: 'Ảnh nền',\n      title: {\n        create: 'Tạo Ảnh nền',\n        edit: 'Chỉnh sửa Ảnh nền',\n        list: 'Danh sách Ảnh nền'\n      },\n      fields: {\n        backGroundBig: 'Ảnh nền lớn',\n        choosesBackGroundBig: 'Chọn ảnh nền lớn',\n        backGroundSmall: 'Ảnh nền nhỏ',\n        choosesBackGroundSmall: 'Chọn ảnh nền nhỏ'\n      }\n    }\n  }\n};\n","import englishMessages from \"ra-language-english\";\n\nexport default {\n  ...englishMessages,\n  pos: {\n    search: \"Search\",\n    configuration: \"Configuration\",\n    changePassword: \"Change Password\",\n    language: \"Language\",\n    cancel: \"Cancel\",\n    confirm: \"Confirm\",\n    reset: 'Reset',\n    required: 'Required',\n    theme: {\n      name: \"Theme\",\n      light: \"Light\",\n      dark: \"Dark\"\n    },\n    dashboard: {\n      monthly_revenue: \"Monthly Revenue\",\n      new_orders: \"New Orders\",\n      pending_reviews: \"Pending Reviews\",\n      new_customers: \"New Customers\",\n      pending_orders: \"Pending Orders\",\n      order: {\n        items:\n          \"by %{customer_name}, one item |||| by %{customer_name}, %{nb_items} items\"\n      },\n      welcome: {\n        title: \"Welcome to my react-admin page\",\n        content: \"Welcome to my manage react-admin...\",\n        subtitle:\n          \"This is the admin of an imaginary poster shop. Feel free to explore and modify the data - it's local to your computer, and will reset each time you reload.\",\n        aor_button: \"react-admin site\",\n        demo_button: \"Source for this demo\"\n      }\n    },\n    menu: {\n      sales: \"Sales\",\n      catalog: \"Catalog\",\n      customers: \"Customers\"\n    }\n  },\n  resources: {\n    users: {\n      dialogTitle: 'Change Password',\n      dialogContentText: 'To change the password, please enter the old password and the password to change your your password at here, We will send the update information!',\n      buttonChangePass: 'Click to change password',\n      currentPassword: 'Current Password',\n      newPassword: 'Password you want to change',\n      verifiedNewPassword: 'Verified Password you want to change',\n      errors: {\n        invalidCurrentPassword: 'Invalid Current Password',\n        invalidVerifiedNewPassword: 'Invalid Verified New Password'\n      },\n      success: {\n        successChangePass: 'Success Change Password!'\n      }\n    },\n    profile: {\n      name: 'Profile',\n      firstName: 'Name',\n      lastName: 'Họ',\n      email: 'Email',\n      gender: 'Gender',\n      avatar: 'Avatar',\n      role: 'Role',\n    },\n    accounts: {\n      name: 'Account',\n      title: {\n        list: 'List Account',\n        create: 'Create Account',\n        edit: 'Edit Account',\n      },\n      fields: {\n        userName: 'User Name',\n        password: 'Password',\n        price: 'Price Acc',\n        rank: 'Rank',\n        hero: 'Hero',\n        gold: 'Gold',\n        skin: 'Skin',\n        pearl_points: 'Pearl Points',\n        thumbnail: 'Thumbnail',\n        choosesThumbnail: 'Chooses Thumbnail',\n        images: 'Images',\n        choosesImages: 'Chooses Images',\n        activated: 'Activated',\n        status: 'Status',\n        numberAcc: 'Number Acc'\n      },\n      tabs: {\n        information: 'Information',\n        photoIntroduction: 'Photo Introduction',\n      },\n    },\n    genres: {\n      name: \"genres\"\n    },\n    customers: {\n      name: \"Customer |||| Customers\",\n      fields: {\n        commands: \"Orders\",\n        groups: \"Segments\",\n        last_seen_gte: \"Visited Since\",\n        name: \"Name\",\n        total_spent: \"Total spent\"\n      },\n      tabs: {\n        identity: \"Identity\",\n        address: \"Address\",\n        orders: \"Orders\",\n        reviews: \"Reviews\",\n        stats: \"Stats\"\n      },\n      page: {\n        delete: \"Delete Customer\"\n      }\n    },\n    commands: {\n      name: \"Order |||| Orders\",\n      title: \"Order %{reference}\",\n      fields: {\n        basket: {\n          delivery: \"Delivery\",\n          reference: \"Reference\",\n          quantity: \"Quantity\",\n          sum: \"Sum\",\n          tax_rate: \"Tax Rate\",\n          total: \"Total\",\n          unit_price: \"Unit Price\"\n        },\n        customer_id: \"Customer\",\n        date_gte: \"Passed Since\",\n        date_lte: \"Passed Before\",\n        total_gte: \"Min amount\",\n        status: \"Status\",\n        returned: \"Returned\"\n      }\n    },\n    invoices: {\n      name: \"Invoice |||| Invoices\",\n      fields: {\n        date: \"Invoice date\",\n        customer_id: \"Customer\",\n        command_id: \"Order\",\n        date_gte: \"Passed Since\",\n        date_lte: \"Passed Before\",\n        total_gte: \"Min amount\",\n        address: \"Address\"\n      }\n    },\n    products: {\n      name: \"Poster |||| Posters\",\n      fields: {\n        category_id: \"Category\",\n        height_gte: \"Min height\",\n        height_lte: \"Max height\",\n        height: \"Height\",\n        image: \"Image\",\n        price: \"Price\",\n        reference: \"Reference\",\n        stock_lte: \"Low Stock\",\n        stock: \"Stock\",\n        thumbnail: \"Thumbnail\",\n        width_gte: \"Min width\",\n        width_lte: \"Max width\",\n        width: \"Width\"\n      },\n      tabs: {\n        image: \"Image\",\n        details: \"Details\",\n        description: \"Description\",\n        reviews: \"Reviews\"\n      }\n    },\n    categories: {\n      name: \"Category |||| Categories\",\n      fields: {\n        products: \"Products\"\n      }\n    },\n    reviews: {\n      name: \"Review |||| Reviews\",\n      detail: \"Review detail\",\n      fields: {\n        customer_id: \"Customer\",\n        command_id: \"Order\",\n        product_id: \"Product\",\n        date_gte: \"Posted since\",\n        date_lte: \"Posted before\",\n        date: \"Date\",\n        comment: \"Comment\",\n        rating: \"Rating\"\n      },\n      action: {\n        accept: \"Accept\",\n        reject: \"Reject\"\n      },\n      notification: {\n        approved_success: \"Review approved\",\n        approved_error: \"Error: Review not approved\",\n        rejected_success: \"Review rejected\",\n        rejected_error: \"Error: Review not rejected\"\n      }\n    },\n    segments: {\n      name: \"Segments\",\n      fields: {\n        customers: \"Customers\",\n        name: \"Name\"\n      },\n      data: {\n        compulsive: \"Compulsive\",\n        collector: \"Collector\",\n        ordered_once: \"Ordered once\",\n        regular: \"Regular\",\n        returns: \"Returns\",\n        reviewer: \"Reviewer\"\n      }\n    }\n  }\n};\n","import vnMessages from './vn';\nimport englishMessages from './en';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\nimport { resolveBrowserLocale } from 'react-admin';\n\nconst messages = {\n  vn: vnMessages,\n  en: englishMessages,\n};\n\nconst i18nProvider = polyglotI18nProvider(\n  locale => messages[locale] ? messages[locale] : messages.vn,\n  resolveBrowserLocale()\n);\n\nexport default i18nProvider;","const checkPermission = (permissions, roles = []) => {\n  const checkArray = roles.map(role => {\n    return permissions.includes(role);\n  })\n  return checkArray.includes(true);\n};\n\nconst adminRoles = ['ADMIN', 'OPERATOR', 'USER'];\n\nexport {\n  checkPermission,\n  adminRoles,\n} ","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { translate } from 'react-admin';\nimport { checkPermission, adminRoles } from '../authProvider/checkPermissions';\n\nconst DashBoard = props => {\n  const { translate, permissions } = props;\n  return permissions && checkPermission(permissions, adminRoles) ? (\n    <Card>\n      <CardHeader title={translate(\"pos.dashboard.welcome.title\")} />\n      <CardContent>{translate(\"pos.dashboard.welcome.content\")}</CardContent>\n    </Card>\n  ) : null\n};\n\nexport default translate(DashBoard);\n","import React from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Title, translate } from 'react-admin';\n\nconst NotFound = props => {\n  const { translate } = props;\n  return (\n    <Card>\n      <Title title=\"pos.notFound.title\" />\n      <CardContent>\n        <h1>404: {translate('pos.notFound.title')}</h1>\n      </CardContent>\n    </Card>\n  )\n};\n\nexport default translate(NotFound);","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  label: { width: '10em', display: 'inline-block' },\n  button: { margin: '1em' },\n  text_field: { width: '332px' },\n});\n\nexport default useStyles;\n","export const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = (theme = 'light' || 'dark') => ({\n  type: CHANGE_THEME,\n  payload: theme,\n});\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst TextFieldCustom = props => {\n  const {\n    label, name, handleChange, handleBlur,\n    values, className, errors, touched\n  } = props;\n  return (\n    <TextField\n      label={label}\n      margin=\"normal\"\n      type=\"password\"\n      name={name}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      value={values[name]}\n      required\n      className={className}\n      error={errors[name] && touched[name]}\n      helperText={(errors[name] && touched[name]) && errors[name]}\n    />\n  )\n};\n\nexport default TextFieldCustom;","import * as Yup from 'yup';\n\nconst validateForm = (translate) => {\n  return Yup.object().shape({\n    currentPassword: Yup.string().required(translate('pos.required')),\n    newPassword: Yup.string().required(translate('pos.required')),\n    verifiedNewPassword: Yup.string().required(translate('pos.required'))\n  });\n}\n\nexport default validateForm;","import React, { useState, forwardRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport {\n  useTranslate,\n  showNotification,\n} from 'react-admin';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport useStyles from './utils/styles';\nimport TextFieldCustom from '../../custom/TextFieldCustom';\nimport validateForm from './utils/validateForm';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst ChangePassWord = props => {\n  const { showNotification } = props;\n  const classes = useStyles();\n  const userId = localStorage.getItem('userId');\n  const translate = useTranslate();\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpenDialog(!openDialog);\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleSubmitFetch = (values) => {\n    const REST_API = process.env.REACT_APP_REST_API_URL;\n    const request = new Request(REST_API + `/user/changePasswords/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(values),\n      headers: { 'Content-Type': 'application/json' },\n    })\n    return fetch(request)\n      .then(response => {\n        if (response.status >= 400) {\n          return response.json()\n            .then(result => {\n              showNotification(translate(result.error), 'warning')\n            })\n        }\n        return response.json()\n          .then(result => {\n            showNotification(translate(result.message));\n            setOpenDialog(false)\n          })\n      })\n  };\n\n  // const handleChange = event => {\n  //   const name = event.target.name;\n  //   const value = event.target.value;\n  //   setState({ ...state, [name]: value })\n  // };\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        className={classes.button}\n        color={openDialog ? 'primary' : 'default'}\n        onClick={handleClickOpen}\n      >\n        {translate('resources.users.buttonChangePass')}\n      </Button>\n      <Dialog\n        open={openDialog}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n      >\n        <DialogTitle >\n          {translate('resources.users.dialogTitle')}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {translate('resources.users.dialogContentText')}\n          </DialogContentText>\n          <Formik\n            initialValues={{\n              currentPassword: '',\n              newPassword: '',\n              verifiedNewPassword: ''\n            }}\n            onSubmit={(values) => handleSubmitFetch(values)}\n            validationSchema={validateForm(translate)}\n          >\n            {(props) => {\n              const {\n                dirty,\n                handleSubmit,\n                handleReset,\n              } = props;\n              return (\n                <Form onSubmit={handleSubmit}>\n                  <TextFieldCustom\n                    label={translate('resources.users.currentPassword')}\n                    name=\"currentPassword\"\n                    className={classes.text_field}\n                    {...props}\n                  />\n                  <TextFieldCustom\n                    label={translate('resources.users.newPassword')}\n                    name=\"newPassword\"\n                    className={classes.text_field}\n                    {...props}\n                  />\n                  <TextFieldCustom\n                    label={translate('resources.users.verifiedNewPassword')}\n                    name=\"verifiedNewPassword\"\n                    className={classes.text_field}\n                    {...props}\n                  />\n                  <DialogActions>\n                    <Button\n                      onClick={handleClose}\n                      color=\"primary\"\n                    >\n                      {translate('pos.cancel')}\n                    </Button>\n                    <Button\n                      type=\"submit\"\n                      disabled={!dirty}\n                      color=\"primary\"\n                    >\n                      {translate('pos.confirm')}\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      color=\"primary\"\n                      onClick={handleReset}\n                      disabled={!dirty}\n                    >\n                      {translate('pos.reset')}\n                    </Button>\n                  </DialogActions>\n                </Form>\n              )\n            }}\n          </Formik>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  showNotification\n}\n\nexport default connect(null, mapDispatchToProps)(ChangePassWord);","import React from 'react';\nimport {\n  useTranslate,\n  useLocale,\n  useSetLocale,\n  Title\n} from 'react-admin';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './utils/styles';\nimport { changeTheme } from './Action';\nimport ChangePassWord from './ChangePassWord';\n\nconst Configuration = () => {\n  const translate = useTranslate();\n  const locale = useLocale();\n  const setLocale = useSetLocale();\n  const classes = useStyles();\n  const theme = useSelector(state => state.theme);\n  const dispatch = useDispatch();\n\n  return (\n    <Card>\n      <Title title={translate('pos.configuration')} />\n      <CardContent>\n        <div className={classes.label}>\n          {translate('pos.theme.name')}\n        </div>\n        <Button\n          variant=\"contained\"\n          className={classes.button}\n          color={theme === 'light' ? 'primary' : 'default'}\n          onClick={() => dispatch(changeTheme('light'))}\n        >\n          {translate('pos.theme.light')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          className={classes.button}\n          color={theme === 'dark' ? 'primary' : 'default'}\n          onClick={() => dispatch(changeTheme('dark'))}\n        >\n          {translate('pos.theme.dark')}\n        </Button>\n      </CardContent>\n      <CardContent>\n        <div className={classes.label}>{translate('pos.language')}</div>\n        <Button\n          variant=\"contained\"\n          className={classes.button}\n          color={locale === 'vn' ? 'primary' : 'default'}\n          onClick={() => setLocale('vn')}\n        >\n          vn\n        </Button>\n        <Button\n          variant=\"contained\"\n          className={classes.button}\n          color={locale === 'en' ? 'primary' : 'default'}\n          onClick={() => setLocale('en')}\n        >\n          en\n        </Button>\n      </CardContent>\n      <CardContent >\n        <div className={classes.label}>{translate('pos.changePassword')}</div>\n        <ChangePassWord />\n      </CardContent>\n    </Card>\n  )\n};\n\nexport default Configuration;","import * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport Configuration from './components/settings/Configuration';\n\nexport default [\n    <Route exact path=\"/configuration\" render={() => <Configuration />} />,\n];\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { AppBar, UserMenu, MenuItemLink, useTranslate } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\nconst ConfigurationMenu = forwardRef((props, ref) => {\n  const translate = useTranslate();\n  return (\n    <MenuItemLink\n      ref={ref}\n      to=\"/configuration\"\n      primaryText={translate('pos.configuration')}\n      leftIcon={<SettingsIcon />}\n      onClick={props.onClick}\n    />\n  );\n});\n\nconst CustomUserMenu = props => (\n  <UserMenu {...props}>\n    <ConfigurationMenu />\n  </UserMenu>\n);\n\nconst CustomAppBar = props => {\n  const classes = useStyles();\n  return (\n    <AppBar\n      {...props}\n      userMenu={<CustomUserMenu />}>\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n      <span className={classes.spacer} />\n    </AppBar>\n  );\n};\n\nexport default CustomAppBar;\n","import * as React from 'react';\nimport { Fragment } from 'react';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Collapse from '@material-ui/core/Collapse';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n  icon: { minWidth: theme.spacing(5) },\n  sidebarIsOpen: {\n    paddingLeft: 25,\n    transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n  },\n  sidebarIsClosed: {\n    paddingLeft: 0,\n    transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n  },\n}));\n\nconst SubMenu = props => {\n  const {\n    handleToggle,\n    sidebarIsOpen,\n    isOpen,\n    name,\n    icon,\n    children,\n    dense\n  } = props;\n  const translate = useTranslate();\n  const classes = useStyles();\n\n  const header = (\n    <MenuItem dense={dense} button onClick={handleToggle}>\n      <ListItemIcon className={classes.icon}>\n        {isOpen ? <ExpandMore /> : icon}\n      </ListItemIcon>\n      <Typography variant=\"inherit\" color=\"textSecondary\">\n        {translate(name)}\n      </Typography>\n    </MenuItem>\n  );\n\n  return (\n    <Fragment>\n      {sidebarIsOpen || isOpen ? (\n        header\n      ) : (\n          <Tooltip title={translate(name)} placement=\"right\">\n            {header}\n          </Tooltip>\n        )}\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <List\n          dense={dense}\n          component=\"div\"\n          disablePadding\n          className={\n            sidebarIsOpen\n              ? classes.sidebarIsOpen\n              : classes.sidebarIsClosed\n          }\n        >\n          {children}\n        </List>\n        <Divider />\n      </Collapse>\n    </Fragment>\n  );\n};\n\nexport default SubMenu;\n","import React from 'react';\nimport MuiGridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth';\nimport { Link } from 'react-router-dom';\nimport { NumberField, ImageField } from 'react-admin';\nimport { linkToRecord } from 'ra-core';\nimport { get } from 'lodash';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '-2px',\n  },\n  gridList: {\n    width: '100%',\n    margin: 0,\n  },\n  tileBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.8) 0%,rgba(0,0,0,0.4) 70%,rgba(0,0,0,0) 100%)',\n  },\n  placeholder: {\n    backgroundColor: theme.palette.grey[300],\n    height: '100%',\n  },\n  price: {\n    display: 'inline',\n    fontSize: '1em',\n  },\n  thumbnail: {\n    marginLeft: '-6px'\n  },\n  link: {\n    color: '#fff',\n  },\n}));\n\nconst getColsForWidth = width => {\n  if (width === 'xs') return 2;\n  if (width === 'sm') return 3;\n  if (width === 'md') return 4;\n  if (width === 'lg') return 5;\n  return 6;\n};\n\nconst times = (nbChildren, fn) =>\n  Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = ({ width, nbItems = 20 }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <MuiGridList\n        cellHeight={180}\n        cols={getColsForWidth(width)}\n        className={classes.gridList}\n      >\n        {' '}\n        {times(nbItems, key => (\n          <GridListTile key={key}>\n            <div className={classes.placeholder} />\n          </GridListTile>\n        ))}\n      </MuiGridList>\n    </div>\n  );\n};\n\nconst LoadedGridList = ({ ids, data, basePath, width }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <MuiGridList\n        cellHeight={240}\n        cols={getColsForWidth(width)}\n        className={classes.gridList}\n      >\n        {ids.map(id => {\n          return (\n            <GridListTile\n              component={Link}\n              key={id}\n              to={linkToRecord(basePath, data[id].id)}\n            >\n              <ImageField\n                source=\"thumbnail\"\n                record={data[id]}\n                className={classes.thumbnail}\n              />\n              <GridListTileBar\n                className={classes.tileBar}\n                title={get(data[id], 'userName')}\n                subtitle={\n                  <span>\n                    <NumberField\n                      className={classes.price}\n                      source=\"price\"\n                      record={data[id]}\n                      color=\"inherit\"\n                      locales=\"fr-FR\"\n                      options={{\n                        style: 'currency',\n                        currency: 'VND',\n                      }}\n                    />\n                  </span>\n                }\n              />\n            </GridListTile>\n          )\n        })}\n      </MuiGridList>\n    </div>\n  );\n};\n\nconst GridList = ({ loaded, ...props }) =>\n  loaded ? <LoadedGridList {...props} /> : <LoadingGridList {...props} />;\n\nexport default withWidth()(GridList);\n","import React from \"react\";\nimport {\n  Filter,\n  Pagination,\n  List,\n  TextInput,\n  BooleanInput\n} from \"react-admin\";\nimport GridList from './GridList';\n\nconst ProductFilter = props => (\n  <Filter {...props}>\n    <TextInput\n      label=\"ra.action.search\"\n      source=\"q\" alwaysOn\n    />\n    <BooleanInput source=\"activated\" />\n  </Filter>\n);\n\nconst AccountList = ({ classes, ...props }) => {\n  return (\n    <List\n      title=\"resources.accounts.title.list\"\n      {...props}\n      sort={{ field: 'id', order: 'ASC' }}\n      filters={<ProductFilter />}\n      perPage={20}\n      pagination={<Pagination rowsPerPageOptions={[10, 20, 40]} />}\n      exporter={false}\n    >\n      <GridList />\n    </List>\n  )\n};\n\nexport default AccountList;\n","import { required } from 'react-admin';\n\nconst validateRequired = [required()];\n\nexport {\n  validateRequired\n}","import React from 'react';\nimport {\n  FormTab,\n  TextInput,\n  NumberInput,\n  BooleanInput,\n  SelectInput,\n  PasswordInput,\n} from 'react-admin';\nimport { validateRequired } from '../utils/validate';\n\nconst InformationProduct = props => {\n  const { classes } = props;\n  return (\n    <FormTab\n      {...props}\n      label=\"resources.accounts.tabs.information\"\n    >\n      <TextInput\n        source=\"userName\"\n        formClassName={classes.width_display}\n        className={classes.width_400}\n        validate={validateRequired}\n      />\n      <PasswordInput\n        source=\"password\"\n        formClassName={classes.width_display_margin}\n        className={classes.width_400}\n        validate={validateRequired}\n      />\n      <br />\n      <TextInput\n        source=\"rank\"\n        formClassName={classes.width_display}\n        className={classes.width_400}\n      />\n      <NumberInput\n        source=\"price\"\n        formClassName={classes.width_display_margin}\n        className={classes.width_400}\n        validate={validateRequired}\n      />\n      <br />\n      <NumberInput\n        source=\"hero\"\n        formClassName={classes.width_display}\n        className={classes.width_400}\n        validate={validateRequired}\n      />\n      <NumberInput\n        source=\"gold\"\n        formClassName={classes.width_display_margin}\n        className={classes.width_400}\n        validate={validateRequired}\n      />\n      <br />\n      <NumberInput\n        source=\"skin\"\n        formClassName={classes.width_display}\n        className={classes.width_400}\n        validate={validateRequired}\n      />\n      <NumberInput\n        source=\"pearl_points\"\n        formClassName={classes.width_display_margin}\n        className={classes.width_400}\n        validate={validateRequired}\n      />\n      <br />\n      <SelectInput\n        choices={JSON.parse(localStorage.webConfigs).STATUS_PRODUCTS}\n        optionText=\"name\"\n        source=\"status\"\n        formClassName={classes.width_display}\n        className={classes.width_400}\n        validate={validateRequired}\n      />\n      <TextInput\n        source=\"numberAcc\"\n        formClassName={classes.width_display_margin}\n        className={classes.width_400}\n      />\n      <br />\n      <BooleanInput source=\"activated\" />\n    </FormTab>\n  )\n};\n\nexport default InformationProduct;","const styles = {\n  width_display: { display: 'inline-block' },\n  width_display_margin: { display: 'inline-block', marginLeft: '32px' },\n  width_400: { width: '400px' },\n  root: {\n    margin: '-2px',\n    marginTop: '10px'\n  },\n  gridList: {\n    width: '100%',\n    margin: 0,\n  },\n};\n\nexport default styles;","import React from \"react\";\nimport {\n  Create,\n  TabbedForm,\n} from \"react-admin\";\nimport InformationProduct from './tabs/InformationProduct';\nimport { withStyles } from '@material-ui/core';\nimport styles from './utils/styles';\n\nconst AccountCreate = props => {\n  return (\n    <Create\n      title=\"resources.accounts.title.create\"\n      actions={null}\n      {...props}\n    >\n      <TabbedForm redirect=\"edit\">\n        <InformationProduct {...props} />\n      </TabbedForm>\n    </Create>\n  )\n};\n\nexport default withStyles(styles)(AccountCreate);\n","import React, { useRef, useState, useEffect } from 'react';\nimport {\n  FormTab,\n  ImageInput,\n  ImageField,\n} from 'react-admin';\nimport MuiGridList from '@material-ui/core/GridList';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport { get, isEmpty } from 'lodash';\n\nconst PhotoIntroduction = props => {\n\n  const REST_API = process.env.REACT_APP_REST_API_URL;\n\n  const { classes, record } = props;\n  const [images, setImages] = useState([]);\n\n  const imagesInDb = get(record, 'images') || [];\n  const accountId = get(props, 'id');\n  const inputUpload = useRef(null);\n\n  const buttonUpload = e => {\n    e.preventDefault();\n    inputUpload.current.click();\n  };\n\n  const handleUploadImages = e => {\n    const formData = new FormData();\n    const files = e.target.files;\n    for (let i = 0; i < files.length; i++) {\n      formData.append(`images`, files[i]);\n    }\n    const request = new Request(REST_API + `/uploadImages/${accountId}`, {\n      method: 'PUT',\n      body: formData\n    })\n    return fetch(request)\n      .then(response => {\n        response.json()\n          .then(result => {\n            setImages(result.images);\n          })\n      })\n      .catch(err => {\n        return Promise.reject(err);\n      })\n  };\n\n  useEffect(() => {\n    if (!isEmpty(imagesInDb)) {\n      setImages(imagesInDb);\n    }\n  }, [imagesInDb])\n\n  return (\n    <FormTab\n      {...props}\n      label=\"resources.accounts.tabs.photoIntroduction\"\n    >\n      <ImageField\n        source=\"thumbnail\"\n        label=\"resources.accounts.fields.thumbnail\"\n      />\n      <ImageInput\n        source=\"thumbnail\"\n        label=\"resources.accounts.fields.choosesThumbnail\"\n        accept=\"image/*\"\n      >\n        <ImageField\n          source=\"src\"\n        />\n      </ImageInput>\n      <div style={{ width: '100%' }}>\n        <form>\n          <input\n            style={{ display: 'none' }}\n            type=\"file\"\n            onChange={handleUploadImages}\n            name=\"images\"\n            ref={inputUpload}\n            multiple={true}\n          />\n          <button style={{ width: '100%', height: '200px' }} onClick={buttonUpload}>\n            <div style={{ margin: '5px' }}>\n              <PhotoCameraIcon />\n            </div>\n            <div style={{ margin: '10px' }}>\n              Tải ảnh\n            </div>\n          </button>\n        </form>\n        <div className={classes.root}>\n          <MuiGridList\n            cellHeight={240}\n            className={classes.gridList}\n          >\n            {images && images.map(image => {\n              const srcImage = `${REST_API}/${image.path}`;\n              return (\n                <img key={image.id} src={srcImage} alt=\"image\" style={{ width: '350px' }} />\n              )\n            })}\n          </MuiGridList>\n        </div>\n      </div>\n    </FormTab>\n  )\n};\n\nexport default PhotoIntroduction;","import React from \"react\";\nimport {\n  Edit,\n  translate,\n  Toolbar,\n  SaveButton,\n  TabbedForm\n} from \"react-admin\";\nimport InformationProduct from './tabs/InformationProduct';\nimport PremiereDate from './tabs/PhotoIntroduction';\nimport { withStyles } from '@material-ui/core';\nimport styles from './utils/styles';\n\nconst AccountEditToolbar = translate(({ translate, ...props }) => (\n  <Toolbar {...props}>\n    <SaveButton />\n  </Toolbar>\n));\n\nconst AccountEdit = props => {\n  return (\n    <Edit\n      title=\"resources.accounts.title.edit\"\n      {...props}\n      undoable={false}\n    >\n      <TabbedForm toolbar={<AccountEditToolbar />}>\n        <InformationProduct {...props} />\n        <PremiereDate {...props} />\n      </TabbedForm>\n    </Edit>\n  )\n};\n\nexport default withStyles(styles)(AccountEdit);\n","import AccountIcon from '@material-ui/icons/SupervisorAccount';\nimport AccountList from \"./AccountList\";\nimport AccountCreate from \"./AccountCreate\";\nimport AccountEdit from \"./AccountEdit\";\n\nexport default {\n  icon: AccountIcon,\n  list: AccountList,\n  create: AccountCreate,\n  edit: AccountEdit\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  useTranslate,\n  DashboardMenuItem,\n  MenuItemLink,\n  WithPermissions\n} from 'react-admin';\nimport SubMenu from './SubMenu';\n\nimport accounts from '../components/account';\nimport { checkPermission, adminRoles } from '../authProvider/checkPermissions';\n\nconst Menu = props => {\n  const { onMenuClick, dense } = props;\n  const [state, setState] = useState({\n    menuSales: false,\n    menuCustomers: false,\n  });\n  const translate = useTranslate();\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\n  useSelector((state) => state.theme); // force rerender on theme change\n\n  const handleToggle = (menu) => {\n    setState(state => ({ ...state, [menu]: !state[menu] }));\n  };\n\n  return (\n    <div>\n      {' '}\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n      <WithPermissions\n        render={({ permissions }) =>\n          permissions && checkPermission(permissions, adminRoles) ? (\n            <SubMenu\n              handleToggle={() => handleToggle('menuSales')}\n              isOpen={state.menuSales}\n              sidebarIsOpen={open}\n              name=\"pos.menu.sales\"\n              icon={<accounts.icon />}\n              dense={dense}\n            >\n              <MenuItemLink\n                to={`/accounts`}\n                primaryText={translate(`resources.accounts.name`, {\n                  smart_count: 2,\n                })}\n                leftIcon={<accounts.icon />}\n                onClick={onMenuClick}\n                sidebarIsOpen={open}\n                dense={dense}\n              />\n            </SubMenu>\n          ) : null\n        }\n      />\n    </div>\n  );\n};\n\nexport default Menu;\n","export const darkTheme = {\n  palette: {\n    primary: {\n      main: '#90caf9',\n    },\n    type: 'dark', // Switching the dark mode on is a single property value change.\n  },\n};\n\nexport const lightTheme = {\n  palette: {\n    secondary: {\n      light: '#5f5fc4',\n      main: '#283593',\n      dark: '#001064',\n      contrastText: '#fff',\n    },\n  },\n  overrides: {\n    MuiFilledInput: {\n      root: {\n        backgroundColor: 'rgba(0, 0, 0, 0.04)',\n        '&$disabled': {\n          backgroundColor: 'rgba(0, 0, 0, 0.04)',\n        },\n      },\n    },\n  },\n};\n","import * as React from 'react';\nimport { Layout, Sidebar } from 'react-admin';\nimport { useSelector } from 'react-redux';\nimport AppBar from './AppBar';\nimport Menu from './Menu';\nimport { lightTheme, darkTheme } from './Themes';\n\nconst CustomSidebar = props => <Sidebar {...props} size={200} />;\n\nconst CustomLayout = props => {\n  const theme = useSelector((state) =>\n    state.theme === 'dark' ? darkTheme : lightTheme\n  );\n  return (\n    <Layout\n      {...props}\n      appBar={AppBar}\n      sidebar={CustomSidebar}\n      menu={Menu}\n      theme={theme}\n    />\n  );\n}\n\nexport default CustomLayout\n","import { CHANGE_THEME, changeTheme } from './Action';\n\nconst ThemeReducers = (previousState = 'light', action = changeTheme) => {\n  if (action.type === CHANGE_THEME) {\n    return action.payload;\n  }\n  return previousState;\n};\n\nexport default ThemeReducers\n","import React, { useState, useEffect } from 'react';\nimport { Admin, Resource } from 'react-admin';\nimport dataProviderFactory from \"./dataProvider\";\nimport authProvider from './authProvider/authProvider';\nimport i18nProvider from './i18n/i18nProvider';\nimport { refreshTokenHandler } from './authProvider/authProvider';\nimport Dashboard from './layout/DashBoard';\nimport NotFound from './layout/NotFound';\nimport customRoutes from './routes';\nimport Layout from './layout/Layout'\nimport accounts from './components/account';\nimport ThemeReducers from './components/settings/ThemeReducers';\n\nconst App = () => {\n  const [dataProvider, setDataProvider] = useState(null);\n  useEffect(() => {\n    refreshTokenHandler();\n    const fetchDataProvider = async () => {\n      const dataProviderInstance = await dataProviderFactory(\n        process.env.REACT_APP_DATA_PROVIDER || ''\n      );\n      setDataProvider(\n        // GOTCHA: dataProviderInstance can be a function\n        () => dataProviderInstance\n      );\n    }\n    fetchDataProvider();\n  }, [])\n\n  if (!dataProvider) {\n    return (\n      <div className=\"loader-container\">\n        <div className=\"loader\">Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <Admin\n      title=\"Shop Acc Admin\"\n      dataProvider={dataProvider}\n      authProvider={authProvider}\n      i18nProvider={i18nProvider}\n      dashboard={Dashboard}\n      customRoutes={customRoutes}\n      customReducers={{ theme: ThemeReducers }}\n      layout={Layout}\n      catchAll={NotFound}\n    >\n      {permissions => [\n        <Resource key=\"Accounts\" name=\"accounts\"  {...accounts} />,\n      ]}\n    </Admin>\n  )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}